#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form1_temp_Qt4_T7th.ui'
#
# Created: Fri May 10 10:14:58 2013
#      by: PyQt4 UI code generator 4.10
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui
from mplwidget import *
from numpy import *
from read_input import get_input
from commands import getoutput
#from qt import QFileDialog    
from makemask import make_mask
from get_edf import file_name 
from some_modules_new import sum_data, auto_mask, do_average, loadedf, saveedf, headeredf, headersedf
import os, ytrc, EdfFile, os.path, threading, thread 
from q_pattern import qpattern
import pylab as p
from time import sleep
from chi4_chiara import chi4
from numpy.ma import masked_array
from matplotlib.nxutils import points_inside_poly

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_Form1(object):
    def setupUi(self, Form1):
        Form1.setObjectName(_fromUtf8("Form1"))
        Form1.setEnabled(True)
        Form1.resize(1255, 610)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(20)
        sizePolicy.setHeightForWidth(Form1.sizePolicy().hasHeightForWidth())
        Form1.setSizePolicy(sizePolicy)
        Form1.setAcceptDrops(True)
        Form1.setSizeGripEnabled(True)
        Form1.setModal(False)
        self.gridlayout = QtGui.QGridLayout(Form1)
        self.gridlayout.setObjectName(_fromUtf8("gridlayout"))
        self.tabWidget1 = QtGui.QTabWidget(Form1)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(254)
        sizePolicy.setVerticalStretch(254)
        sizePolicy.setHeightForWidth(self.tabWidget1.sizePolicy().hasHeightForWidth())
        self.tabWidget1.setSizePolicy(sizePolicy)
        self.tabWidget1.setMaximumSize(QtCore.QSize(32767, 32767))
        self.tabWidget1.setObjectName(_fromUtf8("tabWidget1"))
        self.tab = QtGui.QWidget()
        self.tab.setObjectName(_fromUtf8("tab"))
        self.gridlayout1 = QtGui.QGridLayout(self.tab)
        self.gridlayout1.setObjectName(_fromUtf8("gridlayout1"))
        self.vboxlayout = QtGui.QVBoxLayout()
        self.vboxlayout.setObjectName(_fromUtf8("vboxlayout"))
        self.vboxlayout1 = QtGui.QVBoxLayout()
        self.vboxlayout1.setObjectName(_fromUtf8("vboxlayout1"))
        self.frame9 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame9.sizePolicy().hasHeightForWidth())
        self.frame9.setSizePolicy(sizePolicy)
        self.frame9.setMaximumSize(QtCore.QSize(32767, 60))
        self.frame9.setObjectName(_fromUtf8("frame9"))
        self.hboxlayout = QtGui.QHBoxLayout(self.frame9)
        self.hboxlayout.setObjectName(_fromUtf8("hboxlayout"))
        self.splitter2 = QtGui.QSplitter(self.frame9)
        self.splitter2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter2.setObjectName(_fromUtf8("splitter2"))
        self.textLabel1 = QtGui.QLabel(self.splitter2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel1.setFont(font)
        self.textLabel1.setAcceptDrops(True)
        self.textLabel1.setFrameShape(QtGui.QFrame.NoFrame)
        self.textLabel1.setTextFormat(QtCore.Qt.PlainText)
        self.textLabel1.setScaledContents(True)
        self.textLabel1.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel1.setWordWrap(False)
        self.textLabel1.setObjectName(_fromUtf8("textLabel1"))
        self.lineEdit_input = QtGui.QLineEdit(self.splitter2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_input.sizePolicy().hasHeightForWidth())
        self.lineEdit_input.setSizePolicy(sizePolicy)
        self.lineEdit_input.setMinimumSize(QtCore.QSize(500, 0))
        self.lineEdit_input.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEdit_input.setObjectName(_fromUtf8("lineEdit_input"))
        self.hboxlayout.addWidget(self.splitter2)
        self.pushButton1 = QtGui.QPushButton(self.frame9)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton1.sizePolicy().hasHeightForWidth())
        self.pushButton1.setSizePolicy(sizePolicy)
        self.pushButton1.setMinimumSize(QtCore.QSize(50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton1.setFont(font)
        self.pushButton1.setObjectName(_fromUtf8("pushButton1"))
        self.hboxlayout.addWidget(self.pushButton1)
        self.pushButton2 = QtGui.QPushButton(self.frame9)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton2.sizePolicy().hasHeightForWidth())
        self.pushButton2.setSizePolicy(sizePolicy)
        self.pushButton2.setMinimumSize(QtCore.QSize(50, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton2.setFont(font)
        self.pushButton2.setAutoDefault(False)
        self.pushButton2.setObjectName(_fromUtf8("pushButton2"))
        self.hboxlayout.addWidget(self.pushButton2)
        self.pushButton10 = QtGui.QPushButton(self.frame9)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton10.sizePolicy().hasHeightForWidth())
        self.pushButton10.setSizePolicy(sizePolicy)
        self.pushButton10.setMinimumSize(QtCore.QSize(80, 40))
        self.pushButton10.setShortcut(_fromUtf8(""))
        self.pushButton10.setObjectName(_fromUtf8("pushButton10"))
        self.hboxlayout.addWidget(self.pushButton10)
        self.checkBox_plot = QtGui.QCheckBox(self.frame9)
        self.checkBox_plot.setChecked(True)
        self.checkBox_plot.setAutoRepeat(False)
        self.checkBox_plot.setObjectName(_fromUtf8("checkBox_plot"))
        self.hboxlayout.addWidget(self.checkBox_plot)
        self.checkBox_multiproc = QtGui.QCheckBox(self.frame9)
        self.checkBox_multiproc.setObjectName(_fromUtf8("checkBox_multiproc"))
        self.hboxlayout.addWidget(self.checkBox_multiproc)
        self.vboxlayout1.addWidget(self.frame9)
        self.frame8 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame8.sizePolicy().hasHeightForWidth())
        self.frame8.setSizePolicy(sizePolicy)
        self.frame8.setMaximumSize(QtCore.QSize(32767, 120))
        self.frame8.setObjectName(_fromUtf8("frame8"))
        self.gridlayout2 = QtGui.QGridLayout(self.frame8)
        self.gridlayout2.setObjectName(_fromUtf8("gridlayout2"))
        self.hboxlayout1 = QtGui.QHBoxLayout()
        self.hboxlayout1.setObjectName(_fromUtf8("hboxlayout1"))
        self.hboxlayout2 = QtGui.QHBoxLayout()
        self.hboxlayout2.setObjectName(_fromUtf8("hboxlayout2"))
        self.textLabel4 = QtGui.QLabel(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel4.sizePolicy().hasHeightForWidth())
        self.textLabel4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel4.setFont(font)
        self.textLabel4.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel4.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel4.setScaledContents(True)
        self.textLabel4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel4.setWordWrap(False)
        self.textLabel4.setObjectName(_fromUtf8("textLabel4"))
        self.hboxlayout2.addWidget(self.textLabel4)
        self.lineEditDataPrefix = QtGui.QLineEdit(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDataPrefix.sizePolicy().hasHeightForWidth())
        self.lineEditDataPrefix.setSizePolicy(sizePolicy)
        self.lineEditDataPrefix.setMinimumSize(QtCore.QSize(200, 0))
        self.lineEditDataPrefix.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEditDataPrefix.setObjectName(_fromUtf8("lineEditDataPrefix"))
        self.hboxlayout2.addWidget(self.lineEditDataPrefix)
        self.hboxlayout1.addLayout(self.hboxlayout2)
        self.hboxlayout3 = QtGui.QHBoxLayout()
        self.hboxlayout3.setObjectName(_fromUtf8("hboxlayout3"))
        self.textLabel5 = QtGui.QLabel(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel5.sizePolicy().hasHeightForWidth())
        self.textLabel5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel5.setFont(font)
        self.textLabel5.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel5.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel5.setScaledContents(True)
        self.textLabel5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel5.setWordWrap(False)
        self.textLabel5.setObjectName(_fromUtf8("textLabel5"))
        self.hboxlayout3.addWidget(self.textLabel5)
        self.lineEditDataSuff = QtGui.QLineEdit(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDataSuff.sizePolicy().hasHeightForWidth())
        self.lineEditDataSuff.setSizePolicy(sizePolicy)
        self.lineEditDataSuff.setMaximumSize(QtCore.QSize(40, 23))
        self.lineEditDataSuff.setObjectName(_fromUtf8("lineEditDataSuff"))
        self.hboxlayout3.addWidget(self.lineEditDataSuff)
        self.hboxlayout1.addLayout(self.hboxlayout3)
        self.hboxlayout4 = QtGui.QHBoxLayout()
        self.hboxlayout4.setObjectName(_fromUtf8("hboxlayout4"))
        self.textLabel6 = QtGui.QLabel(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel6.sizePolicy().hasHeightForWidth())
        self.textLabel6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel6.setFont(font)
        self.textLabel6.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel6.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel6.setScaledContents(True)
        self.textLabel6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel6.setWordWrap(False)
        self.textLabel6.setObjectName(_fromUtf8("textLabel6"))
        self.hboxlayout4.addWidget(self.textLabel6)
        self.lineEditDataStart = QtGui.QLineEdit(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDataStart.sizePolicy().hasHeightForWidth())
        self.lineEditDataStart.setSizePolicy(sizePolicy)
        self.lineEditDataStart.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEditDataStart.setObjectName(_fromUtf8("lineEditDataStart"))
        self.hboxlayout4.addWidget(self.lineEditDataStart)
        self.hboxlayout1.addLayout(self.hboxlayout4)
        self.hboxlayout5 = QtGui.QHBoxLayout()
        self.hboxlayout5.setObjectName(_fromUtf8("hboxlayout5"))
        self.textLabel7 = QtGui.QLabel(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel7.sizePolicy().hasHeightForWidth())
        self.textLabel7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel7.setFont(font)
        self.textLabel7.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel7.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel7.setScaledContents(True)
        self.textLabel7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel7.setWordWrap(False)
        self.textLabel7.setObjectName(_fromUtf8("textLabel7"))
        self.hboxlayout5.addWidget(self.textLabel7)
        self.lineEditDataEnd = QtGui.QLineEdit(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDataEnd.sizePolicy().hasHeightForWidth())
        self.lineEditDataEnd.setSizePolicy(sizePolicy)
        self.lineEditDataEnd.setMinimumSize(QtCore.QSize(40, 0))
        self.lineEditDataEnd.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEditDataEnd.setObjectName(_fromUtf8("lineEditDataEnd"))
        self.hboxlayout5.addWidget(self.lineEditDataEnd)
        self.hboxlayout1.addLayout(self.hboxlayout5)
        self.gridlayout2.addLayout(self.hboxlayout1, 1, 0, 1, 1)
        self.hboxlayout6 = QtGui.QHBoxLayout()
        self.hboxlayout6.setSpacing(0)
        self.hboxlayout6.setObjectName(_fromUtf8("hboxlayout6"))
        self.textLabel3 = QtGui.QLabel(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel3.sizePolicy().hasHeightForWidth())
        self.textLabel3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel3.setFont(font)
        self.textLabel3.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel3.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel3.setScaledContents(True)
        self.textLabel3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel3.setWordWrap(False)
        self.textLabel3.setObjectName(_fromUtf8("textLabel3"))
        self.hboxlayout6.addWidget(self.textLabel3)
        self.lineEditDataDir = QtGui.QLineEdit(self.frame8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDataDir.sizePolicy().hasHeightForWidth())
        self.lineEditDataDir.setSizePolicy(sizePolicy)
        self.lineEditDataDir.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEditDataDir.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEditDataDir.setObjectName(_fromUtf8("lineEditDataDir"))
        self.hboxlayout6.addWidget(self.lineEditDataDir)
        self.toolButton_DataDir = QtGui.QToolButton(self.frame8)
        self.toolButton_DataDir.setObjectName(_fromUtf8("toolButton_DataDir"))
        self.hboxlayout6.addWidget(self.toolButton_DataDir)
        self.gridlayout2.addLayout(self.hboxlayout6, 0, 0, 1, 1)
        self.vboxlayout1.addWidget(self.frame8)
        self.frame1 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame1.sizePolicy().hasHeightForWidth())
        self.frame1.setSizePolicy(sizePolicy)
        self.frame1.setObjectName(_fromUtf8("frame1"))
        self.gridlayout3 = QtGui.QGridLayout(self.frame1)
        self.gridlayout3.setObjectName(_fromUtf8("gridlayout3"))
        self.checkBox_darks = QtGui.QCheckBox(self.frame1)
        self.checkBox_darks.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_darks.sizePolicy().hasHeightForWidth())
        self.checkBox_darks.setSizePolicy(sizePolicy)
        self.checkBox_darks.setMaximumSize(QtCore.QSize(32767, 30))
        self.checkBox_darks.setChecked(False)
        self.checkBox_darks.setObjectName(_fromUtf8("checkBox_darks"))
        self.gridlayout3.addWidget(self.checkBox_darks, 0, 0, 1, 1)
        self.frame2 = QtGui.QFrame(self.frame1)
        self.frame2.setEnabled(False)
        self.frame2.setObjectName(_fromUtf8("frame2"))
        self.gridlayout4 = QtGui.QGridLayout(self.frame2)
        self.gridlayout4.setObjectName(_fromUtf8("gridlayout4"))
        self.hboxlayout7 = QtGui.QHBoxLayout()
        self.hboxlayout7.setObjectName(_fromUtf8("hboxlayout7"))
        self.textLabel8 = QtGui.QLabel(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel8.sizePolicy().hasHeightForWidth())
        self.textLabel8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel8.setFont(font)
        self.textLabel8.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel8.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel8.setScaledContents(True)
        self.textLabel8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel8.setWordWrap(False)
        self.textLabel8.setObjectName(_fromUtf8("textLabel8"))
        self.hboxlayout7.addWidget(self.textLabel8)
        self.lineEditDarkDir = QtGui.QLineEdit(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDarkDir.sizePolicy().hasHeightForWidth())
        self.lineEditDarkDir.setSizePolicy(sizePolicy)
        self.lineEditDarkDir.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEditDarkDir.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEditDarkDir.setObjectName(_fromUtf8("lineEditDarkDir"))
        self.hboxlayout7.addWidget(self.lineEditDarkDir)
        self.toolButton_DarkDir = QtGui.QToolButton(self.frame2)
        self.toolButton_DarkDir.setObjectName(_fromUtf8("toolButton_DarkDir"))
        self.hboxlayout7.addWidget(self.toolButton_DarkDir)
        self.gridlayout4.addLayout(self.hboxlayout7, 0, 0, 1, 3)
        self.hboxlayout8 = QtGui.QHBoxLayout()
        self.hboxlayout8.setObjectName(_fromUtf8("hboxlayout8"))
        self.textLabel10 = QtGui.QLabel(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel10.sizePolicy().hasHeightForWidth())
        self.textLabel10.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel10.setFont(font)
        self.textLabel10.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel10.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel10.setScaledContents(True)
        self.textLabel10.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel10.setWordWrap(False)
        self.textLabel10.setObjectName(_fromUtf8("textLabel10"))
        self.hboxlayout8.addWidget(self.textLabel10)
        self.lineEditDarkStart = QtGui.QLineEdit(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDarkStart.sizePolicy().hasHeightForWidth())
        self.lineEditDarkStart.setSizePolicy(sizePolicy)
        self.lineEditDarkStart.setMinimumSize(QtCore.QSize(50, 0))
        self.lineEditDarkStart.setMaximumSize(QtCore.QSize(40, 23))
        self.lineEditDarkStart.setObjectName(_fromUtf8("lineEditDarkStart"))
        self.hboxlayout8.addWidget(self.lineEditDarkStart)
        self.gridlayout4.addLayout(self.hboxlayout8, 1, 1, 1, 1)
        self.hboxlayout9 = QtGui.QHBoxLayout()
        self.hboxlayout9.setObjectName(_fromUtf8("hboxlayout9"))
        self.textLabel11 = QtGui.QLabel(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel11.sizePolicy().hasHeightForWidth())
        self.textLabel11.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel11.setFont(font)
        self.textLabel11.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel11.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel11.setScaledContents(True)
        self.textLabel11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel11.setWordWrap(False)
        self.textLabel11.setObjectName(_fromUtf8("textLabel11"))
        self.hboxlayout9.addWidget(self.textLabel11)
        self.lineEditDarkEnd = QtGui.QLineEdit(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDarkEnd.sizePolicy().hasHeightForWidth())
        self.lineEditDarkEnd.setSizePolicy(sizePolicy)
        self.lineEditDarkEnd.setMinimumSize(QtCore.QSize(50, 0))
        self.lineEditDarkEnd.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEditDarkEnd.setObjectName(_fromUtf8("lineEditDarkEnd"))
        self.hboxlayout9.addWidget(self.lineEditDarkEnd)
        self.gridlayout4.addLayout(self.hboxlayout9, 1, 2, 1, 1)
        self.hboxlayout10 = QtGui.QHBoxLayout()
        self.hboxlayout10.setObjectName(_fromUtf8("hboxlayout10"))
        self.textLabel9 = QtGui.QLabel(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel9.sizePolicy().hasHeightForWidth())
        self.textLabel9.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel9.setFont(font)
        self.textLabel9.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel9.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel9.setScaledContents(True)
        self.textLabel9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel9.setWordWrap(False)
        self.textLabel9.setObjectName(_fromUtf8("textLabel9"))
        self.hboxlayout10.addWidget(self.textLabel9)
        self.lineEditDarkPrefix = QtGui.QLineEdit(self.frame2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditDarkPrefix.sizePolicy().hasHeightForWidth())
        self.lineEditDarkPrefix.setSizePolicy(sizePolicy)
        self.lineEditDarkPrefix.setMinimumSize(QtCore.QSize(200, 0))
        self.lineEditDarkPrefix.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEditDarkPrefix.setObjectName(_fromUtf8("lineEditDarkPrefix"))
        self.hboxlayout10.addWidget(self.lineEditDarkPrefix)
        self.gridlayout4.addLayout(self.hboxlayout10, 1, 0, 1, 1)
        self.gridlayout3.addWidget(self.frame2, 0, 1, 1, 1)
        self.vboxlayout1.addWidget(self.frame1)
        self.vboxlayout.addLayout(self.vboxlayout1)
        self.hboxlayout11 = QtGui.QHBoxLayout()
        self.hboxlayout11.setObjectName(_fromUtf8("hboxlayout11"))
        self.frame14 = QtGui.QFrame(self.tab)
        self.frame14.setObjectName(_fromUtf8("frame14"))
        self.gridlayout5 = QtGui.QGridLayout(self.frame14)
        self.gridlayout5.setObjectName(_fromUtf8("gridlayout5"))
        self.vboxlayout2 = QtGui.QVBoxLayout()
        self.vboxlayout2.setSpacing(0)
        self.vboxlayout2.setObjectName(_fromUtf8("vboxlayout2"))
        self.hboxlayout12 = QtGui.QHBoxLayout()
        self.hboxlayout12.setObjectName(_fromUtf8("hboxlayout12"))
        self.buttonGroup1 = QtGui.QGroupBox(self.frame14)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonGroup1.sizePolicy().hasHeightForWidth())
        self.buttonGroup1.setSizePolicy(sizePolicy)
        self.buttonGroup1.setObjectName(_fromUtf8("buttonGroup1"))
        self.gridlayout6 = QtGui.QGridLayout(self.buttonGroup1)
        self.gridlayout6.setObjectName(_fromUtf8("gridlayout6"))
        self.vboxlayout3 = QtGui.QVBoxLayout()
        self.vboxlayout3.setObjectName(_fromUtf8("vboxlayout3"))
        self.comboBox_detector = QtGui.QComboBox(self.buttonGroup1)
        self.comboBox_detector.setObjectName(_fromUtf8("comboBox_detector"))
        self.comboBox_detector.addItem(_fromUtf8(""))
        self.comboBox_detector.addItem(_fromUtf8(""))
        self.comboBox_detector.addItem(_fromUtf8(""))
        self.comboBox_detector.addItem(_fromUtf8(""))
        self.vboxlayout3.addWidget(self.comboBox_detector)
        self.hboxlayout13 = QtGui.QHBoxLayout()
        self.hboxlayout13.setSpacing(0)
        self.hboxlayout13.setObjectName(_fromUtf8("hboxlayout13"))
        self.checkBox_flatfield = QtGui.QCheckBox(self.buttonGroup1)
        self.checkBox_flatfield.setEnabled(True)
        self.checkBox_flatfield.setMaximumSize(QtCore.QSize(67, 32767))
        self.checkBox_flatfield.setChecked(False)
        self.checkBox_flatfield.setObjectName(_fromUtf8("checkBox_flatfield"))
        self.hboxlayout13.addWidget(self.checkBox_flatfield)
        self.comboBox_flatfield = QtGui.QComboBox(self.buttonGroup1)
        self.comboBox_flatfield.setEnabled(False)
        self.comboBox_flatfield.setObjectName(_fromUtf8("comboBox_flatfield"))
        self.comboBox_flatfield.addItem(_fromUtf8(""))
        self.comboBox_flatfield.addItem(_fromUtf8(""))
        self.comboBox_flatfield.addItem(_fromUtf8(""))
        self.comboBox_flatfield.addItem(_fromUtf8(""))
        self.hboxlayout13.addWidget(self.comboBox_flatfield)
        self.vboxlayout3.addLayout(self.hboxlayout13)
        self.hboxlayout14 = QtGui.QHBoxLayout()
        self.hboxlayout14.setSpacing(0)
        self.hboxlayout14.setObjectName(_fromUtf8("hboxlayout14"))
        self.lineEdit_other = QtGui.QLineEdit(self.buttonGroup1)
        self.lineEdit_other.setObjectName(_fromUtf8("lineEdit_other"))
        self.hboxlayout14.addWidget(self.lineEdit_other)
        self.vboxlayout3.addLayout(self.hboxlayout14)
        self.gridlayout6.addLayout(self.vboxlayout3, 0, 0, 1, 1)
        self.hboxlayout12.addWidget(self.buttonGroup1)
        self.buttonGroup2 = QtGui.QGroupBox(self.frame14)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonGroup2.sizePolicy().hasHeightForWidth())
        self.buttonGroup2.setSizePolicy(sizePolicy)
        self.buttonGroup2.setObjectName(_fromUtf8("buttonGroup2"))
        self.gridlayout7 = QtGui.QGridLayout(self.buttonGroup2)
        self.gridlayout7.setObjectName(_fromUtf8("gridlayout7"))
        self.vboxlayout4 = QtGui.QVBoxLayout()
        self.vboxlayout4.setObjectName(_fromUtf8("vboxlayout4"))
        self.radioButton3 = QtGui.QRadioButton(self.buttonGroup2)
        self.radioButton3.setChecked(True)
        self.radioButton3.setObjectName(_fromUtf8("radioButton3"))
        self.vboxlayout4.addWidget(self.radioButton3)
        self.radioButton4 = QtGui.QRadioButton(self.buttonGroup2)
        self.radioButton4.setChecked(False)
        self.radioButton4.setObjectName(_fromUtf8("radioButton4"))
        self.vboxlayout4.addWidget(self.radioButton4)
        self.radioButton5 = QtGui.QRadioButton(self.buttonGroup2)
        self.radioButton5.setShortcut(_fromUtf8(""))
        self.radioButton5.setObjectName(_fromUtf8("radioButton5"))
        self.vboxlayout4.addWidget(self.radioButton5)
        self.gridlayout7.addLayout(self.vboxlayout4, 0, 0, 1, 1)
        self.hboxlayout12.addWidget(self.buttonGroup2)
        self.vboxlayout2.addLayout(self.hboxlayout12)
        self.groupBox4 = QtGui.QGroupBox(self.frame14)
        self.groupBox4.setObjectName(_fromUtf8("groupBox4"))
        self.gridlayout8 = QtGui.QGridLayout(self.groupBox4)
        self.gridlayout8.setObjectName(_fromUtf8("gridlayout8"))
        self.hboxlayout15 = QtGui.QHBoxLayout()
        self.hboxlayout15.setObjectName(_fromUtf8("hboxlayout15"))
        self.checkBox_droplet = QtGui.QCheckBox(self.groupBox4)
        self.checkBox_droplet.setEnabled(False)
        self.checkBox_droplet.setObjectName(_fromUtf8("checkBox_droplet"))
        self.hboxlayout15.addWidget(self.checkBox_droplet)
        self.groupBox3 = QtGui.QGroupBox(self.groupBox4)
        self.groupBox3.setEnabled(False)
        self.groupBox3.setObjectName(_fromUtf8("groupBox3"))
        self.gridlayout9 = QtGui.QGridLayout(self.groupBox3)
        self.gridlayout9.setObjectName(_fromUtf8("gridlayout9"))
        self.vboxlayout5 = QtGui.QVBoxLayout()
        self.vboxlayout5.setSpacing(0)
        self.vboxlayout5.setObjectName(_fromUtf8("vboxlayout5"))
        self.hboxlayout16 = QtGui.QHBoxLayout()
        self.hboxlayout16.setSpacing(0)
        self.hboxlayout16.setObjectName(_fromUtf8("hboxlayout16"))
        self.textLabel_photonadu_2 = QtGui.QLabel(self.groupBox3)
        self.textLabel_photonadu_2.setMaximumSize(QtCore.QSize(100, 32767))
        self.textLabel_photonadu_2.setWordWrap(False)
        self.textLabel_photonadu_2.setObjectName(_fromUtf8("textLabel_photonadu_2"))
        self.hboxlayout16.addWidget(self.textLabel_photonadu_2)
        self.lineEdit_0PhotADU = QtGui.QLineEdit(self.groupBox3)
        self.lineEdit_0PhotADU.setObjectName(_fromUtf8("lineEdit_0PhotADU"))
        self.hboxlayout16.addWidget(self.lineEdit_0PhotADU)
        self.textLabel_sigmaphoton_2 = QtGui.QLabel(self.groupBox3)
        self.textLabel_sigmaphoton_2.setMaximumSize(QtCore.QSize(30, 32767))
        self.textLabel_sigmaphoton_2.setWordWrap(False)
        self.textLabel_sigmaphoton_2.setObjectName(_fromUtf8("textLabel_sigmaphoton_2"))
        self.hboxlayout16.addWidget(self.textLabel_sigmaphoton_2)
        self.lineEdit_0PhotSigma = QtGui.QLineEdit(self.groupBox3)
        self.lineEdit_0PhotSigma.setObjectName(_fromUtf8("lineEdit_0PhotSigma"))
        self.hboxlayout16.addWidget(self.lineEdit_0PhotSigma)
        self.vboxlayout5.addLayout(self.hboxlayout16)
        self.hboxlayout17 = QtGui.QHBoxLayout()
        self.hboxlayout17.setSpacing(0)
        self.hboxlayout17.setObjectName(_fromUtf8("hboxlayout17"))
        self.textLabel_photonadu = QtGui.QLabel(self.groupBox3)
        self.textLabel_photonadu.setMaximumSize(QtCore.QSize(100, 32767))
        self.textLabel_photonadu.setWordWrap(False)
        self.textLabel_photonadu.setObjectName(_fromUtf8("textLabel_photonadu"))
        self.hboxlayout17.addWidget(self.textLabel_photonadu)
        self.lineEdit_1PhotADU = QtGui.QLineEdit(self.groupBox3)
        self.lineEdit_1PhotADU.setObjectName(_fromUtf8("lineEdit_1PhotADU"))
        self.hboxlayout17.addWidget(self.lineEdit_1PhotADU)
        self.textLabel_sigmaphoton = QtGui.QLabel(self.groupBox3)
        self.textLabel_sigmaphoton.setMaximumSize(QtCore.QSize(30, 32767))
        self.textLabel_sigmaphoton.setWordWrap(False)
        self.textLabel_sigmaphoton.setObjectName(_fromUtf8("textLabel_sigmaphoton"))
        self.hboxlayout17.addWidget(self.textLabel_sigmaphoton)
        self.lineEdit_1PhotSigma = QtGui.QLineEdit(self.groupBox3)
        self.lineEdit_1PhotSigma.setObjectName(_fromUtf8("lineEdit_1PhotSigma"))
        self.hboxlayout17.addWidget(self.lineEdit_1PhotSigma)
        self.vboxlayout5.addLayout(self.hboxlayout17)
        self.gridlayout9.addLayout(self.vboxlayout5, 0, 0, 1, 1)
        self.hboxlayout15.addWidget(self.groupBox3)
        self.gridlayout8.addLayout(self.hboxlayout15, 0, 0, 1, 1)
        self.vboxlayout2.addWidget(self.groupBox4)
        self.gridlayout5.addLayout(self.vboxlayout2, 0, 0, 1, 1)
        self.hboxlayout11.addWidget(self.frame14)
        self.vboxlayout6 = QtGui.QVBoxLayout()
        self.vboxlayout6.setObjectName(_fromUtf8("vboxlayout6"))
        self.frame10 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame10.sizePolicy().hasHeightForWidth())
        self.frame10.setSizePolicy(sizePolicy)
        self.frame10.setMaximumSize(QtCore.QSize(32767, 32767))
        self.frame10.setObjectName(_fromUtf8("frame10"))
        self.gridlayout10 = QtGui.QGridLayout(self.frame10)
        self.gridlayout10.setObjectName(_fromUtf8("gridlayout10"))
        self.vboxlayout7 = QtGui.QVBoxLayout()
        self.vboxlayout7.setObjectName(_fromUtf8("vboxlayout7"))
        self.splitter12 = QtGui.QSplitter(self.frame10)
        self.splitter12.setOrientation(QtCore.Qt.Horizontal)
        self.splitter12.setObjectName(_fromUtf8("splitter12"))
        self.textLabel12 = QtGui.QLabel(self.splitter12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel12.sizePolicy().hasHeightForWidth())
        self.textLabel12.setSizePolicy(sizePolicy)
        self.textLabel12.setMaximumSize(QtCore.QSize(170, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel12.setFont(font)
        self.textLabel12.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel12.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel12.setScaledContents(True)
        self.textLabel12.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel12.setWordWrap(False)
        self.textLabel12.setObjectName(_fromUtf8("textLabel12"))
        self.lineEdit12 = QtGui.QLineEdit(self.splitter12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit12.sizePolicy().hasHeightForWidth())
        self.lineEdit12.setSizePolicy(sizePolicy)
        self.lineEdit12.setMinimumSize(QtCore.QSize(300, 20))
        self.lineEdit12.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEdit12.setObjectName(_fromUtf8("lineEdit12"))
        self.toolButton_outdir = QtGui.QToolButton(self.splitter12)
        self.toolButton_outdir.setObjectName(_fromUtf8("toolButton_outdir"))
        self.vboxlayout7.addWidget(self.splitter12)
        self.splitter13 = QtGui.QSplitter(self.frame10)
        self.splitter13.setOrientation(QtCore.Qt.Horizontal)
        self.splitter13.setObjectName(_fromUtf8("splitter13"))
        self.textLabel13 = QtGui.QLabel(self.splitter13)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel13.sizePolicy().hasHeightForWidth())
        self.textLabel13.setSizePolicy(sizePolicy)
        self.textLabel13.setMaximumSize(QtCore.QSize(170, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel13.setFont(font)
        self.textLabel13.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel13.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel13.setScaledContents(True)
        self.textLabel13.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel13.setWordWrap(False)
        self.textLabel13.setObjectName(_fromUtf8("textLabel13"))
        self.lineEdit13 = QtGui.QLineEdit(self.splitter13)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit13.sizePolicy().hasHeightForWidth())
        self.lineEdit13.setSizePolicy(sizePolicy)
        self.lineEdit13.setMinimumSize(QtCore.QSize(200, 20))
        self.lineEdit13.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEdit13.setObjectName(_fromUtf8("lineEdit13"))
        self.vboxlayout7.addWidget(self.splitter13)
        self.gridlayout10.addLayout(self.vboxlayout7, 0, 0, 1, 1)
        self.vboxlayout6.addWidget(self.frame10)
        self.frame11 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame11.sizePolicy().hasHeightForWidth())
        self.frame11.setSizePolicy(sizePolicy)
        self.frame11.setMaximumSize(QtCore.QSize(32767, 150))
        self.frame11.setObjectName(_fromUtf8("frame11"))
        self.gridlayout11 = QtGui.QGridLayout(self.frame11)
        self.gridlayout11.setObjectName(_fromUtf8("gridlayout11"))
        spacerItem = QtGui.QSpacerItem(21, 46, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridlayout11.addItem(spacerItem, 1, 2, 1, 1)
        self.vboxlayout8 = QtGui.QVBoxLayout()
        self.vboxlayout8.setObjectName(_fromUtf8("vboxlayout8"))
        self.hboxlayout18 = QtGui.QHBoxLayout()
        self.hboxlayout18.setObjectName(_fromUtf8("hboxlayout18"))
        self.textLabel15 = QtGui.QLabel(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel15.sizePolicy().hasHeightForWidth())
        self.textLabel15.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel15.setFont(font)
        self.textLabel15.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel15.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel15.setScaledContents(True)
        self.textLabel15.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel15.setWordWrap(False)
        self.textLabel15.setObjectName(_fromUtf8("textLabel15"))
        self.hboxlayout18.addWidget(self.textLabel15)
        self.lineEdit_dsd = QtGui.QLineEdit(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_dsd.sizePolicy().hasHeightForWidth())
        self.lineEdit_dsd.setSizePolicy(sizePolicy)
        self.lineEdit_dsd.setMinimumSize(QtCore.QSize(35, 23))
        self.lineEdit_dsd.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit_dsd.setObjectName(_fromUtf8("lineEdit_dsd"))
        self.hboxlayout18.addWidget(self.lineEdit_dsd)
        self.vboxlayout8.addLayout(self.hboxlayout18)
        self.hboxlayout19 = QtGui.QHBoxLayout()
        self.hboxlayout19.setObjectName(_fromUtf8("hboxlayout19"))
        self.textLabel16 = QtGui.QLabel(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel16.sizePolicy().hasHeightForWidth())
        self.textLabel16.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel16.setFont(font)
        self.textLabel16.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel16.setTextFormat(QtCore.Qt.LogText)
        self.textLabel16.setScaledContents(True)
        self.textLabel16.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel16.setWordWrap(False)
        self.textLabel16.setObjectName(_fromUtf8("textLabel16"))
        self.hboxlayout19.addWidget(self.textLabel16)
        self.lineEdit_lambda = QtGui.QLineEdit(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_lambda.sizePolicy().hasHeightForWidth())
        self.lineEdit_lambda.setSizePolicy(sizePolicy)
        self.lineEdit_lambda.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit_lambda.setObjectName(_fromUtf8("lineEdit_lambda"))
        self.hboxlayout19.addWidget(self.lineEdit_lambda)
        self.vboxlayout8.addLayout(self.hboxlayout19)
        self.hboxlayout20 = QtGui.QHBoxLayout()
        self.hboxlayout20.setObjectName(_fromUtf8("hboxlayout20"))
        self.textLabel17 = QtGui.QLabel(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel17.sizePolicy().hasHeightForWidth())
        self.textLabel17.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel17.setFont(font)
        self.textLabel17.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel17.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel17.setScaledContents(True)
        self.textLabel17.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel17.setWordWrap(False)
        self.textLabel17.setObjectName(_fromUtf8("textLabel17"))
        self.hboxlayout20.addWidget(self.textLabel17)
        self.lineEdit17 = QtGui.QLineEdit(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit17.sizePolicy().hasHeightForWidth())
        self.lineEdit17.setSizePolicy(sizePolicy)
        self.lineEdit17.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit17.setObjectName(_fromUtf8("lineEdit17"))
        self.hboxlayout20.addWidget(self.lineEdit17)
        self.vboxlayout8.addLayout(self.hboxlayout20)
        self.gridlayout11.addLayout(self.vboxlayout8, 0, 0, 2, 1)
        self.vboxlayout9 = QtGui.QVBoxLayout()
        self.vboxlayout9.setObjectName(_fromUtf8("vboxlayout9"))
        self.hboxlayout21 = QtGui.QHBoxLayout()
        self.hboxlayout21.setObjectName(_fromUtf8("hboxlayout21"))
        self.textLabel19 = QtGui.QLabel(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel19.sizePolicy().hasHeightForWidth())
        self.textLabel19.setSizePolicy(sizePolicy)
        self.textLabel19.setMaximumSize(QtCore.QSize(200, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel19.setFont(font)
        self.textLabel19.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel19.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel19.setScaledContents(True)
        self.textLabel19.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel19.setWordWrap(False)
        self.textLabel19.setObjectName(_fromUtf8("textLabel19"))
        self.hboxlayout21.addWidget(self.textLabel19)
        self.lineEdit18 = QtGui.QLineEdit(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit18.sizePolicy().hasHeightForWidth())
        self.lineEdit18.setSizePolicy(sizePolicy)
        self.lineEdit18.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit18.setObjectName(_fromUtf8("lineEdit18"))
        self.hboxlayout21.addWidget(self.lineEdit18)
        self.vboxlayout9.addLayout(self.hboxlayout21)
        self.hboxlayout22 = QtGui.QHBoxLayout()
        self.hboxlayout22.setObjectName(_fromUtf8("hboxlayout22"))
        self.textLabel20 = QtGui.QLabel(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel20.sizePolicy().hasHeightForWidth())
        self.textLabel20.setSizePolicy(sizePolicy)
        self.textLabel20.setMaximumSize(QtCore.QSize(200, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel20.setFont(font)
        self.textLabel20.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel20.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel20.setScaledContents(True)
        self.textLabel20.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel20.setWordWrap(False)
        self.textLabel20.setObjectName(_fromUtf8("textLabel20"))
        self.hboxlayout22.addWidget(self.textLabel20)
        self.lineEdit19 = QtGui.QLineEdit(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit19.sizePolicy().hasHeightForWidth())
        self.lineEdit19.setSizePolicy(sizePolicy)
        self.lineEdit19.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit19.setObjectName(_fromUtf8("lineEdit19"))
        self.hboxlayout22.addWidget(self.lineEdit19)
        self.vboxlayout9.addLayout(self.hboxlayout22)
        self.hboxlayout23 = QtGui.QHBoxLayout()
        self.hboxlayout23.setObjectName(_fromUtf8("hboxlayout23"))
        self.textLabel22 = QtGui.QLabel(self.frame11)
        self.textLabel22.setEnabled(False)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel22.sizePolicy().hasHeightForWidth())
        self.textLabel22.setSizePolicy(sizePolicy)
        self.textLabel22.setMaximumSize(QtCore.QSize(200, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel22.setFont(font)
        self.textLabel22.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel22.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel22.setScaledContents(True)
        self.textLabel22.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel22.setWordWrap(False)
        self.textLabel22.setObjectName(_fromUtf8("textLabel22"))
        self.hboxlayout23.addWidget(self.textLabel22)
        self.lineEdit20 = QtGui.QLineEdit(self.frame11)
        self.lineEdit20.setEnabled(False)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit20.sizePolicy().hasHeightForWidth())
        self.lineEdit20.setSizePolicy(sizePolicy)
        self.lineEdit20.setMaximumSize(QtCore.QSize(50, 23))
        self.lineEdit20.setObjectName(_fromUtf8("lineEdit20"))
        self.hboxlayout23.addWidget(self.lineEdit20)
        self.vboxlayout9.addLayout(self.hboxlayout23)
        self.gridlayout11.addLayout(self.vboxlayout9, 0, 1, 2, 1)
        self.groupBox2 = QtGui.QGroupBox(self.frame11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox2.sizePolicy().hasHeightForWidth())
        self.groupBox2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox2.setFont(font)
        self.groupBox2.setObjectName(_fromUtf8("groupBox2"))
        self.gridlayout12 = QtGui.QGridLayout(self.groupBox2)
        self.gridlayout12.setObjectName(_fromUtf8("gridlayout12"))
        self.comboBox_normalize = QtGui.QComboBox(self.groupBox2)
        self.comboBox_normalize.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.comboBox_normalize.setFont(font)
        self.comboBox_normalize.setObjectName(_fromUtf8("comboBox_normalize"))
        self.comboBox_normalize.addItem(_fromUtf8(""))
        self.comboBox_normalize.addItem(_fromUtf8(""))
        self.gridlayout12.addWidget(self.comboBox_normalize, 0, 0, 1, 1)
        self.gridlayout11.addWidget(self.groupBox2, 0, 2, 1, 1)
        self.vboxlayout6.addWidget(self.frame11)
        self.hboxlayout11.addLayout(self.vboxlayout6)
        self.vboxlayout.addLayout(self.hboxlayout11)
        self.frame12 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame12.sizePolicy().hasHeightForWidth())
        self.frame12.setSizePolicy(sizePolicy)
        self.frame12.setMaximumSize(QtCore.QSize(32767, 32767))
        self.frame12.setObjectName(_fromUtf8("frame12"))
        self.gridlayout13 = QtGui.QGridLayout(self.frame12)
        self.gridlayout13.setObjectName(_fromUtf8("gridlayout13"))
        self.hboxlayout24 = QtGui.QHBoxLayout()
        self.hboxlayout24.setObjectName(_fromUtf8("hboxlayout24"))
        self.textLabel_qTRC = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel_qTRC.sizePolicy().hasHeightForWidth())
        self.textLabel_qTRC.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel_qTRC.setFont(font)
        self.textLabel_qTRC.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel_qTRC.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel_qTRC.setScaledContents(True)
        self.textLabel_qTRC.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel_qTRC.setWordWrap(False)
        self.textLabel_qTRC.setObjectName(_fromUtf8("textLabel_qTRC"))
        self.hboxlayout24.addWidget(self.textLabel_qTRC)
        self.lineEdit_qTRC = QtGui.QLineEdit(self.frame12)
        self.lineEdit_qTRC.setMaximumSize(QtCore.QSize(40, 23))
        self.lineEdit_qTRC.setObjectName(_fromUtf8("lineEdit_qTRC"))
        self.hboxlayout24.addWidget(self.lineEdit_qTRC)
        self.gridlayout13.addLayout(self.hboxlayout24, 1, 0, 1, 1)
        self.hboxlayout25 = QtGui.QHBoxLayout()
        self.hboxlayout25.setObjectName(_fromUtf8("hboxlayout25"))
        self.textLabel28 = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel28.sizePolicy().hasHeightForWidth())
        self.textLabel28.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel28.setFont(font)
        self.textLabel28.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel28.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel28.setScaledContents(True)
        self.textLabel28.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel28.setWordWrap(False)
        self.textLabel28.setObjectName(_fromUtf8("textLabel28"))
        self.hboxlayout25.addWidget(self.textLabel28)
        self.lineEdit_tolerance = QtGui.QLineEdit(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_tolerance.sizePolicy().hasHeightForWidth())
        self.lineEdit_tolerance.setSizePolicy(sizePolicy)
        self.lineEdit_tolerance.setMaximumSize(QtCore.QSize(40, 23))
        self.lineEdit_tolerance.setObjectName(_fromUtf8("lineEdit_tolerance"))
        self.hboxlayout25.addWidget(self.lineEdit_tolerance)
        self.gridlayout13.addLayout(self.hboxlayout25, 0, 0, 1, 1)
        self.hboxlayout26 = QtGui.QHBoxLayout()
        self.hboxlayout26.setObjectName(_fromUtf8("hboxlayout26"))
        self.textLabel29 = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel29.sizePolicy().hasHeightForWidth())
        self.textLabel29.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel29.setFont(font)
        self.textLabel29.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel29.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel29.setScaledContents(True)
        self.textLabel29.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel29.setWordWrap(False)
        self.textLabel29.setObjectName(_fromUtf8("textLabel29"))
        self.hboxlayout26.addWidget(self.textLabel29)
        self.lineEdit_firstq = QtGui.QLineEdit(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_firstq.sizePolicy().hasHeightForWidth())
        self.lineEdit_firstq.setSizePolicy(sizePolicy)
        self.lineEdit_firstq.setMaximumSize(QtCore.QSize(70, 23))
        self.lineEdit_firstq.setObjectName(_fromUtf8("lineEdit_firstq"))
        self.hboxlayout26.addWidget(self.lineEdit_firstq)
        self.gridlayout13.addLayout(self.hboxlayout26, 0, 1, 1, 1)
        self.hboxlayout27 = QtGui.QHBoxLayout()
        self.hboxlayout27.setObjectName(_fromUtf8("hboxlayout27"))
        self.textLabel31 = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel31.sizePolicy().hasHeightForWidth())
        self.textLabel31.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel31.setFont(font)
        self.textLabel31.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel31.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel31.setScaledContents(True)
        self.textLabel31.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel31.setWordWrap(False)
        self.textLabel31.setObjectName(_fromUtf8("textLabel31"))
        self.hboxlayout27.addWidget(self.textLabel31)
        self.lineEdit28 = QtGui.QLineEdit(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit28.sizePolicy().hasHeightForWidth())
        self.lineEdit28.setSizePolicy(sizePolicy)
        self.lineEdit28.setMaximumSize(QtCore.QSize(70, 23))
        self.lineEdit28.setObjectName(_fromUtf8("lineEdit28"))
        self.hboxlayout27.addWidget(self.lineEdit28)
        self.gridlayout13.addLayout(self.hboxlayout27, 0, 2, 1, 1)
        self.hboxlayout28 = QtGui.QHBoxLayout()
        self.hboxlayout28.setObjectName(_fromUtf8("hboxlayout28"))
        self.textLabel32 = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel32.sizePolicy().hasHeightForWidth())
        self.textLabel32.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel32.setFont(font)
        self.textLabel32.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel32.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel32.setScaledContents(True)
        self.textLabel32.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel32.setWordWrap(False)
        self.textLabel32.setObjectName(_fromUtf8("textLabel32"))
        self.hboxlayout28.addWidget(self.textLabel32)
        self.lineEdit_nq = QtGui.QLineEdit(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_nq.sizePolicy().hasHeightForWidth())
        self.lineEdit_nq.setSizePolicy(sizePolicy)
        self.lineEdit_nq.setMaximumSize(QtCore.QSize(70, 23))
        self.lineEdit_nq.setObjectName(_fromUtf8("lineEdit_nq"))
        self.hboxlayout28.addWidget(self.lineEdit_nq)
        self.gridlayout13.addLayout(self.hboxlayout28, 1, 2, 1, 1)
        self.hboxlayout29 = QtGui.QHBoxLayout()
        self.hboxlayout29.setObjectName(_fromUtf8("hboxlayout29"))
        self.textLabel30 = QtGui.QLabel(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel30.sizePolicy().hasHeightForWidth())
        self.textLabel30.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel30.setFont(font)
        self.textLabel30.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel30.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel30.setScaledContents(True)
        self.textLabel30.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel30.setWordWrap(False)
        self.textLabel30.setObjectName(_fromUtf8("textLabel30"))
        self.hboxlayout29.addWidget(self.textLabel30)
        self.lineEdit27 = QtGui.QLineEdit(self.frame12)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit27.sizePolicy().hasHeightForWidth())
        self.lineEdit27.setSizePolicy(sizePolicy)
        self.lineEdit27.setMaximumSize(QtCore.QSize(70, 23))
        self.lineEdit27.setObjectName(_fromUtf8("lineEdit27"))
        self.hboxlayout29.addWidget(self.lineEdit27)
        self.gridlayout13.addLayout(self.hboxlayout29, 1, 1, 1, 1)
        self.vboxlayout.addWidget(self.frame12)
        self.gridlayout1.addLayout(self.vboxlayout, 0, 0, 1, 1)
        self.tabWidget1.addTab(self.tab, _fromUtf8(""))
        self.TabPage = QtGui.QWidget()
        self.TabPage.setObjectName(_fromUtf8("TabPage"))
        self.gridlayout14 = QtGui.QGridLayout(self.TabPage)
        self.gridlayout14.setObjectName(_fromUtf8("gridlayout14"))
        self.vboxlayout10 = QtGui.QVBoxLayout()
        self.vboxlayout10.setSpacing(0)
        self.vboxlayout10.setObjectName(_fromUtf8("vboxlayout10"))
        self.hboxlayout30 = QtGui.QHBoxLayout()
        self.hboxlayout30.setObjectName(_fromUtf8("hboxlayout30"))
        self.frame11_2 = QtGui.QFrame(self.TabPage)
        self.frame11_2.setObjectName(_fromUtf8("frame11_2"))
        self.vboxlayout11 = QtGui.QVBoxLayout(self.frame11_2)
        self.vboxlayout11.setSpacing(3)
        self.vboxlayout11.setObjectName(_fromUtf8("vboxlayout11"))
        self.splitter11 = QtGui.QSplitter(self.frame11_2)
        self.splitter11.setOrientation(QtCore.Qt.Horizontal)
        self.splitter11.setObjectName(_fromUtf8("splitter11"))
        self.Staticdata_label = QtGui.QLabel(self.splitter11)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Staticdata_label.sizePolicy().hasHeightForWidth())
        self.Staticdata_label.setSizePolicy(sizePolicy)
        self.Staticdata_label.setMaximumSize(QtCore.QSize(120, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Staticdata_label.setFont(font)
        self.Staticdata_label.setWordWrap(False)
        self.Staticdata_label.setObjectName(_fromUtf8("Staticdata_label"))
        self.lineEdit_data = QtGui.QLineEdit(self.splitter11)
        self.lineEdit_data.setEnabled(False)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_data.sizePolicy().hasHeightForWidth())
        self.lineEdit_data.setSizePolicy(sizePolicy)
        self.lineEdit_data.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEdit_data.setMaximumSize(QtCore.QSize(860, 23))
        self.lineEdit_data.setObjectName(_fromUtf8("lineEdit_data"))
        self.vboxlayout11.addWidget(self.splitter11)
        self.splitter16 = QtGui.QSplitter(self.frame11_2)
        self.splitter16.setOrientation(QtCore.Qt.Horizontal)
        self.splitter16.setObjectName(_fromUtf8("splitter16"))
        self.mask_label = QtGui.QLabel(self.splitter16)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mask_label.sizePolicy().hasHeightForWidth())
        self.mask_label.setSizePolicy(sizePolicy)
        self.mask_label.setMaximumSize(QtCore.QSize(120, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.mask_label.setFont(font)
        self.mask_label.setWordWrap(False)
        self.mask_label.setObjectName(_fromUtf8("mask_label"))
        self.lineEdit_mask = QtGui.QLineEdit(self.splitter16)
        self.lineEdit_mask.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_mask.sizePolicy().hasHeightForWidth())
        self.lineEdit_mask.setSizePolicy(sizePolicy)
        self.lineEdit_mask.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEdit_mask.setMaximumSize(QtCore.QSize(860, 23))
        self.lineEdit_mask.setObjectName(_fromUtf8("lineEdit_mask"))
        self.toolButtonMaskFile = QtGui.QToolButton(self.splitter16)
        self.toolButtonMaskFile.setMaximumSize(QtCore.QSize(40, 32767))
        self.toolButtonMaskFile.setObjectName(_fromUtf8("toolButtonMaskFile"))
        self.vboxlayout11.addWidget(self.splitter16)
        self.splitter15 = QtGui.QSplitter(self.frame11_2)
        self.splitter15.setOrientation(QtCore.Qt.Horizontal)
        self.splitter15.setObjectName(_fromUtf8("splitter15"))
        self.dark_label = QtGui.QLabel(self.splitter15)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dark_label.sizePolicy().hasHeightForWidth())
        self.dark_label.setSizePolicy(sizePolicy)
        self.dark_label.setMaximumSize(QtCore.QSize(120, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.dark_label.setFont(font)
        self.dark_label.setWordWrap(False)
        self.dark_label.setObjectName(_fromUtf8("dark_label"))
        self.lineEdit_dark = QtGui.QLineEdit(self.splitter15)
        self.lineEdit_dark.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_dark.sizePolicy().hasHeightForWidth())
        self.lineEdit_dark.setSizePolicy(sizePolicy)
        self.lineEdit_dark.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEdit_dark.setMaximumSize(QtCore.QSize(860, 23))
        self.lineEdit_dark.setObjectName(_fromUtf8("lineEdit_dark"))
        self.toolButtonDarkFile = QtGui.QToolButton(self.splitter15)
        self.toolButtonDarkFile.setMaximumSize(QtCore.QSize(40, 32767))
        self.toolButtonDarkFile.setObjectName(_fromUtf8("toolButtonDarkFile"))
        self.vboxlayout11.addWidget(self.splitter15)
        self.splitter14 = QtGui.QSplitter(self.frame11_2)
        self.splitter14.setOrientation(QtCore.Qt.Horizontal)
        self.splitter14.setObjectName(_fromUtf8("splitter14"))
        self.qmask_label = QtGui.QLabel(self.splitter14)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.qmask_label.sizePolicy().hasHeightForWidth())
        self.qmask_label.setSizePolicy(sizePolicy)
        self.qmask_label.setMaximumSize(QtCore.QSize(120, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.qmask_label.setFont(font)
        self.qmask_label.setWordWrap(False)
        self.qmask_label.setObjectName(_fromUtf8("qmask_label"))
        self.lineEdit_qmask = QtGui.QLineEdit(self.splitter14)
        self.lineEdit_qmask.setEnabled(False)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_qmask.sizePolicy().hasHeightForWidth())
        self.lineEdit_qmask.setSizePolicy(sizePolicy)
        self.lineEdit_qmask.setMinimumSize(QtCore.QSize(600, 0))
        self.lineEdit_qmask.setMaximumSize(QtCore.QSize(860, 23))
        self.lineEdit_qmask.setObjectName(_fromUtf8("lineEdit_qmask"))
        self.vboxlayout11.addWidget(self.splitter14)
        self.hboxlayout30.addWidget(self.frame11_2)
        self.frame10_2 = QtGui.QFrame(self.TabPage)
        self.frame10_2.setMaximumSize(QtCore.QSize(250, 32767))
        self.frame10_2.setObjectName(_fromUtf8("frame10_2"))
        self.vboxlayout12 = QtGui.QVBoxLayout(self.frame10_2)
        self.vboxlayout12.setSpacing(0)
        self.vboxlayout12.setObjectName(_fromUtf8("vboxlayout12"))
        self.splitter151 = QtGui.QSplitter(self.frame10_2)
        self.splitter151.setOrientation(QtCore.Qt.Horizontal)
        self.splitter151.setObjectName(_fromUtf8("splitter151"))
        self.textLabel29_2 = QtGui.QLabel(self.splitter151)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel29_2.sizePolicy().hasHeightForWidth())
        self.textLabel29_2.setSizePolicy(sizePolicy)
        self.textLabel29_2.setMaximumSize(QtCore.QSize(140, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel29_2.setFont(font)
        self.textLabel29_2.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel29_2.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel29_2.setScaledContents(True)
        self.textLabel29_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel29_2.setWordWrap(False)
        self.textLabel29_2.setObjectName(_fromUtf8("textLabel29_2"))
        self.lineEdit_firstq_2 = QtGui.QLineEdit(self.splitter151)
        self.lineEdit_firstq_2.setMaximumSize(QtCore.QSize(80, 23))
        self.lineEdit_firstq_2.setObjectName(_fromUtf8("lineEdit_firstq_2"))
        self.vboxlayout12.addWidget(self.splitter151)
        self.splitter9 = QtGui.QSplitter(self.frame10_2)
        self.splitter9.setOrientation(QtCore.Qt.Horizontal)
        self.splitter9.setObjectName(_fromUtf8("splitter9"))
        self.textLabel30_2 = QtGui.QLabel(self.splitter9)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel30_2.sizePolicy().hasHeightForWidth())
        self.textLabel30_2.setSizePolicy(sizePolicy)
        self.textLabel30_2.setMaximumSize(QtCore.QSize(140, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel30_2.setFont(font)
        self.textLabel30_2.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel30_2.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel30_2.setScaledContents(True)
        self.textLabel30_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel30_2.setWordWrap(False)
        self.textLabel30_2.setObjectName(_fromUtf8("textLabel30_2"))
        self.lineEdit_deltaq_2 = QtGui.QLineEdit(self.splitter9)
        self.lineEdit_deltaq_2.setMaximumSize(QtCore.QSize(80, 23))
        self.lineEdit_deltaq_2.setObjectName(_fromUtf8("lineEdit_deltaq_2"))
        self.vboxlayout12.addWidget(self.splitter9)
        self.splitter8 = QtGui.QSplitter(self.frame10_2)
        self.splitter8.setOrientation(QtCore.Qt.Horizontal)
        self.splitter8.setObjectName(_fromUtf8("splitter8"))
        self.textLabel31_2 = QtGui.QLabel(self.splitter8)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel31_2.sizePolicy().hasHeightForWidth())
        self.textLabel31_2.setSizePolicy(sizePolicy)
        self.textLabel31_2.setMaximumSize(QtCore.QSize(140, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel31_2.setFont(font)
        self.textLabel31_2.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel31_2.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel31_2.setScaledContents(True)
        self.textLabel31_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel31_2.setWordWrap(False)
        self.textLabel31_2.setObjectName(_fromUtf8("textLabel31_2"))
        self.lineEdit_stepq_2 = QtGui.QLineEdit(self.splitter8)
        self.lineEdit_stepq_2.setMaximumSize(QtCore.QSize(80, 23))
        self.lineEdit_stepq_2.setObjectName(_fromUtf8("lineEdit_stepq_2"))
        self.vboxlayout12.addWidget(self.splitter8)
        self.splitter6 = QtGui.QSplitter(self.frame10_2)
        self.splitter6.setOrientation(QtCore.Qt.Horizontal)
        self.splitter6.setObjectName(_fromUtf8("splitter6"))
        self.textLabel32_2 = QtGui.QLabel(self.splitter6)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel32_2.sizePolicy().hasHeightForWidth())
        self.textLabel32_2.setSizePolicy(sizePolicy)
        self.textLabel32_2.setMaximumSize(QtCore.QSize(140, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel32_2.setFont(font)
        self.textLabel32_2.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel32_2.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel32_2.setScaledContents(True)
        self.textLabel32_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel32_2.setWordWrap(False)
        self.textLabel32_2.setObjectName(_fromUtf8("textLabel32_2"))
        self.lineEdit_nq_2 = QtGui.QLineEdit(self.splitter6)
        self.lineEdit_nq_2.setMaximumSize(QtCore.QSize(80, 23))
        self.lineEdit_nq_2.setObjectName(_fromUtf8("lineEdit_nq_2"))
        self.vboxlayout12.addWidget(self.splitter6)
        self.splitter161 = QtGui.QSplitter(self.frame10_2)
        self.splitter161.setOrientation(QtCore.Qt.Horizontal)
        self.splitter161.setObjectName(_fromUtf8("splitter161"))
        self.textLabel_tolerance_2 = QtGui.QLabel(self.splitter161)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textLabel_tolerance_2.sizePolicy().hasHeightForWidth())
        self.textLabel_tolerance_2.setSizePolicy(sizePolicy)
        self.textLabel_tolerance_2.setMaximumSize(QtCore.QSize(140, 32767))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textLabel_tolerance_2.setFont(font)
        self.textLabel_tolerance_2.setFrameShadow(QtGui.QFrame.Plain)
        self.textLabel_tolerance_2.setTextFormat(QtCore.Qt.AutoText)
        self.textLabel_tolerance_2.setScaledContents(True)
        self.textLabel_tolerance_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.textLabel_tolerance_2.setWordWrap(False)
        self.textLabel_tolerance_2.setObjectName(_fromUtf8("textLabel_tolerance_2"))
        self.lineEdit_tolerance_2 = QtGui.QLineEdit(self.splitter161)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_tolerance_2.sizePolicy().hasHeightForWidth())
        self.lineEdit_tolerance_2.setSizePolicy(sizePolicy)
        self.lineEdit_tolerance_2.setMaximumSize(QtCore.QSize(80, 23))
        self.lineEdit_tolerance_2.setObjectName(_fromUtf8("lineEdit_tolerance_2"))
        self.vboxlayout12.addWidget(self.splitter161)
        self.hboxlayout30.addWidget(self.frame10_2)
        self.vboxlayout10.addLayout(self.hboxlayout30)
        self.gridlayout15 = QtGui.QGridLayout()
        self.gridlayout15.setSpacing(0)
        self.gridlayout15.setObjectName(_fromUtf8("gridlayout15"))
        self.gridlayout16 = QtGui.QGridLayout()
        self.gridlayout16.setMargin(0)
        self.gridlayout16.setSpacing(0)
        self.gridlayout16.setObjectName(_fromUtf8("gridlayout16"))
        self.buttonGroup3 = QtGui.QGroupBox(self.TabPage)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonGroup3.sizePolicy().hasHeightForWidth())
        self.buttonGroup3.setSizePolicy(sizePolicy)
        self.buttonGroup3.setObjectName(_fromUtf8("buttonGroup3"))
        self.vboxlayout13 = QtGui.QVBoxLayout(self.buttonGroup3)
        self.vboxlayout13.setSpacing(3)
        self.vboxlayout13.setObjectName(_fromUtf8("vboxlayout13"))
        self.pushButtonMakeDark = QtGui.QPushButton(self.buttonGroup3)
        self.pushButtonMakeDark.setEnabled(False)
        self.pushButtonMakeDark.setObjectName(_fromUtf8("pushButtonMakeDark"))
        self.vboxlayout13.addWidget(self.pushButtonMakeDark)
        self.pushButtonDoStaticFast = QtGui.QPushButton(self.buttonGroup3)
        self.pushButtonDoStaticFast.setObjectName(_fromUtf8("pushButtonDoStaticFast"))
        self.vboxlayout13.addWidget(self.pushButtonDoStaticFast)
        self.pushButtonDoStaticAll = QtGui.QPushButton(self.buttonGroup3)
        self.pushButtonDoStaticAll.setObjectName(_fromUtf8("pushButtonDoStaticAll"))
        self.vboxlayout13.addWidget(self.pushButtonDoStaticAll)
        self.pushButtonMakeMask = QtGui.QPushButton(self.buttonGroup3)
        self.pushButtonMakeMask.setObjectName(_fromUtf8("pushButtonMakeMask"))
        self.vboxlayout13.addWidget(self.pushButtonMakeMask)
        self.pushButton_makeQs = QtGui.QPushButton(self.buttonGroup3)
        self.pushButton_makeQs.setObjectName(_fromUtf8("pushButton_makeQs"))
        self.vboxlayout13.addWidget(self.pushButton_makeQs)
        self.pushButton10_2 = QtGui.QPushButton(self.buttonGroup3)
        self.pushButton10_2.setShortcut(_fromUtf8(""))
        self.pushButton10_2.setObjectName(_fromUtf8("pushButton10_2"))
        self.vboxlayout13.addWidget(self.pushButton10_2)
        self.pushButton16 = QtGui.QPushButton(self.buttonGroup3)
        self.pushButton16.setEnabled(True)
        self.pushButton16.setObjectName(_fromUtf8("pushButton16"))
        self.vboxlayout13.addWidget(self.pushButton16)
        self.gridlayout16.addWidget(self.buttonGroup3, 0, 0, 1, 1)
        self.matplotlibWidget1 = MplWidget(self.TabPage)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.matplotlibWidget1.sizePolicy().hasHeightForWidth())
        self.matplotlibWidget1.setSizePolicy(sizePolicy)
        self.matplotlibWidget1.setObjectName(_fromUtf8("matplotlibWidget1"))
        self.gridlayout16.addWidget(self.matplotlibWidget1, 0, 1, 1, 1)
        self.gridlayout15.addLayout(self.gridlayout16, 1, 0, 1, 1)
        self.hboxlayout31 = QtGui.QHBoxLayout()
        self.hboxlayout31.setObjectName(_fromUtf8("hboxlayout31"))
        self.buttonGroup4 = QtGui.QGroupBox(self.TabPage)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonGroup4.sizePolicy().hasHeightForWidth())
        self.buttonGroup4.setSizePolicy(sizePolicy)
        self.buttonGroup4.setMinimumSize(QtCore.QSize(560, 60))
        self.buttonGroup4.setObjectName(_fromUtf8("buttonGroup4"))
        self.pushButtonDark = QtGui.QPushButton(self.buttonGroup4)
        self.pushButtonDark.setEnabled(False)
        self.pushButtonDark.setGeometry(QtCore.QRect(11, 11, 82, 42))
        self.pushButtonDark.setObjectName(_fromUtf8("pushButtonDark"))
        self.pushButtonRaw = QtGui.QPushButton(self.buttonGroup4)
        self.pushButtonRaw.setEnabled(False)
        self.pushButtonRaw.setGeometry(QtCore.QRect(96, 11, 82, 42))
        self.pushButtonRaw.setObjectName(_fromUtf8("pushButtonRaw"))
        self.pushButtonUnmasked = QtGui.QPushButton(self.buttonGroup4)
        self.pushButtonUnmasked.setGeometry(QtCore.QRect(181, 11, 104, 42))
        self.pushButtonUnmasked.setObjectName(_fromUtf8("pushButtonUnmasked"))
        self.pushButtonMasked = QtGui.QPushButton(self.buttonGroup4)
        self.pushButtonMasked.setGeometry(QtCore.QRect(288, 11, 91, 42))
        self.pushButtonMasked.setObjectName(_fromUtf8("pushButtonMasked"))
        self.pushButton_showQs = QtGui.QPushButton(self.buttonGroup4)
        self.pushButton_showQs.setGeometry(QtCore.QRect(382, 11, 82, 42))
        self.pushButton_showQs.setObjectName(_fromUtf8("pushButton_showQs"))
        self.pushButton_ShowIq = QtGui.QPushButton(self.buttonGroup4)
        self.pushButton_ShowIq.setGeometry(QtCore.QRect(467, 11, 82, 42))
        self.pushButton_ShowIq.setObjectName(_fromUtf8("pushButton_ShowIq"))
        self.hboxlayout31.addWidget(self.buttonGroup4)
        self.checkBox_zoom = QtGui.QCheckBox(self.TabPage)
        self.checkBox_zoom.setMaximumSize(QtCore.QSize(80, 32767))
        self.checkBox_zoom.setObjectName(_fromUtf8("checkBox_zoom"))
        self.hboxlayout31.addWidget(self.checkBox_zoom)
        self.gridlayout15.addLayout(self.hboxlayout31, 0, 0, 1, 1)
        self.vboxlayout10.addLayout(self.gridlayout15)
        self.gridlayout14.addLayout(self.vboxlayout10, 0, 0, 1, 1)
        self.tabWidget1.addTab(self.TabPage, _fromUtf8(""))
        self.TabPage1 = QtGui.QWidget()
        self.TabPage1.setObjectName(_fromUtf8("TabPage1"))
        self.gridlayout17 = QtGui.QGridLayout(self.TabPage1)
        self.gridlayout17.setObjectName(_fromUtf8("gridlayout17"))
        self.vboxlayout14 = QtGui.QVBoxLayout()
        self.vboxlayout14.setSpacing(0)
        self.vboxlayout14.setObjectName(_fromUtf8("vboxlayout14"))
        self.hboxlayout32 = QtGui.QHBoxLayout()
        self.hboxlayout32.setObjectName(_fromUtf8("hboxlayout32"))
        self.hboxlayout33 = QtGui.QHBoxLayout()
        self.hboxlayout33.setObjectName(_fromUtf8("hboxlayout33"))
        self.cf_label = QtGui.QLabel(self.TabPage1)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cf_label.setFont(font)
        self.cf_label.setWordWrap(False)
        self.cf_label.setObjectName(_fromUtf8("cf_label"))
        self.hboxlayout33.addWidget(self.cf_label)
        self.lineEdit_cf = QtGui.QLineEdit(self.TabPage1)
        self.lineEdit_cf.setEnabled(True)
        self.lineEdit_cf.setMinimumSize(QtCore.QSize(400, 0))
        self.lineEdit_cf.setObjectName(_fromUtf8("lineEdit_cf"))
        self.hboxlayout33.addWidget(self.lineEdit_cf)
        self.hboxlayout32.addLayout(self.hboxlayout33)
        self.splitter5 = QtGui.QSplitter(self.TabPage1)
        self.splitter5.setOrientation(QtCore.Qt.Horizontal)
        self.splitter5.setObjectName(_fromUtf8("splitter5"))
        self.Staticdata_label_2 = QtGui.QLabel(self.splitter5)
        self.Staticdata_label_2.setMaximumSize(QtCore.QSize(80, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Staticdata_label_2.setFont(font)
        self.Staticdata_label_2.setWordWrap(False)
        self.Staticdata_label_2.setIndent(-1)
        self.Staticdata_label_2.setObjectName(_fromUtf8("Staticdata_label_2"))
        self.lineEdit_plotq = QtGui.QLineEdit(self.splitter5)
        self.lineEdit_plotq.setMinimumSize(QtCore.QSize(20, 0))
        self.lineEdit_plotq.setMaximumSize(QtCore.QSize(35, 32767))
        self.lineEdit_plotq.setObjectName(_fromUtf8("lineEdit_plotq"))
        self.hboxlayout32.addWidget(self.splitter5)
        self.pushButton_cf_del = QtGui.QPushButton(self.TabPage1)
        self.pushButton_cf_del.setObjectName(_fromUtf8("pushButton_cf_del"))
        self.hboxlayout32.addWidget(self.pushButton_cf_del)
        self.pushButton_del_cf = QtGui.QPushButton(self.TabPage1)
        self.pushButton_del_cf.setObjectName(_fromUtf8("pushButton_del_cf"))
        self.hboxlayout32.addWidget(self.pushButton_del_cf)
        self.vboxlayout14.addLayout(self.hboxlayout32)
        self.hboxlayout34 = QtGui.QHBoxLayout()
        self.hboxlayout34.setSpacing(0)
        self.hboxlayout34.setObjectName(_fromUtf8("hboxlayout34"))
        self.vboxlayout15 = QtGui.QVBoxLayout()
        self.vboxlayout15.setObjectName(_fromUtf8("vboxlayout15"))
        self.pushButton23 = QtGui.QPushButton(self.TabPage1)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton23.sizePolicy().hasHeightForWidth())
        self.pushButton23.setSizePolicy(sizePolicy)
        self.pushButton23.setObjectName(_fromUtf8("pushButton23"))
        self.vboxlayout15.addWidget(self.pushButton23)
        self.checkBox_hold = QtGui.QCheckBox(self.TabPage1)
        self.checkBox_hold.setMaximumSize(QtCore.QSize(50, 32767))
        self.checkBox_hold.setChecked(True)
        self.checkBox_hold.setObjectName(_fromUtf8("checkBox_hold"))
        self.vboxlayout15.addWidget(self.checkBox_hold)
        self.matplotlibWidget_cf = MplWidget(self.TabPage1)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.matplotlibWidget_cf.sizePolicy().hasHeightForWidth())
        self.matplotlibWidget_cf.setSizePolicy(sizePolicy)
        self.matplotlibWidget_cf.setObjectName(_fromUtf8("matplotlibWidget_cf"))
        self.vboxlayout15.addWidget(self.matplotlibWidget_cf)
        self.hboxlayout34.addLayout(self.vboxlayout15)
        self.vboxlayout14.addLayout(self.hboxlayout34)
        self.gridlayout17.addLayout(self.vboxlayout14, 0, 0, 1, 1)
        self.tabWidget1.addTab(self.TabPage1, _fromUtf8(""))
        self.TabPage2 = QtGui.QWidget()
        self.TabPage2.setObjectName(_fromUtf8("TabPage2"))
        self.gridlayout18 = QtGui.QGridLayout(self.TabPage2)
        self.gridlayout18.setObjectName(_fromUtf8("gridlayout18"))
        self.vboxlayout16 = QtGui.QVBoxLayout()
        self.vboxlayout16.setSpacing(0)
        self.vboxlayout16.setObjectName(_fromUtf8("vboxlayout16"))
        self.hboxlayout35 = QtGui.QHBoxLayout()
        self.hboxlayout35.setObjectName(_fromUtf8("hboxlayout35"))
        self.splitter17 = QtGui.QSplitter(self.TabPage2)
        self.splitter17.setOrientation(QtCore.Qt.Horizontal)
        self.splitter17.setObjectName(_fromUtf8("splitter17"))
        self.cf_label_TRcf = QtGui.QLabel(self.splitter17)
        self.cf_label_TRcf.setMaximumSize(QtCore.QSize(200, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cf_label_TRcf.setFont(font)
        self.cf_label_TRcf.setWordWrap(False)
        self.cf_label_TRcf.setObjectName(_fromUtf8("cf_label_TRcf"))
        self.lineEdit_TRcf = QtGui.QLineEdit(self.splitter17)
        self.lineEdit_TRcf.setEnabled(True)
        self.lineEdit_TRcf.setMinimumSize(QtCore.QSize(400, 0))
        self.lineEdit_TRcf.setObjectName(_fromUtf8("lineEdit_TRcf"))
        self.hboxlayout35.addWidget(self.splitter17)
        self.splitter162 = QtGui.QSplitter(self.TabPage2)
        self.splitter162.setOrientation(QtCore.Qt.Horizontal)
        self.splitter162.setObjectName(_fromUtf8("splitter162"))
        self.q_label = QtGui.QLabel(self.splitter162)
        self.q_label.setMaximumSize(QtCore.QSize(80, 32767))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.q_label.setFont(font)
        self.q_label.setWordWrap(False)
        self.q_label.setObjectName(_fromUtf8("q_label"))
        self.lineEdit_plotq_TRcf = QtGui.QLineEdit(self.splitter162)
        self.lineEdit_plotq_TRcf.setMaximumSize(QtCore.QSize(35, 3267))
        self.lineEdit_plotq_TRcf.setObjectName(_fromUtf8("lineEdit_plotq_TRcf"))
        self.hboxlayout35.addWidget(self.splitter162)
        self.pushButton_TRcf_plot = QtGui.QPushButton(self.TabPage2)
        self.pushButton_TRcf_plot.setObjectName(_fromUtf8("pushButton_TRcf_plot"))
        self.hboxlayout35.addWidget(self.pushButton_TRcf_plot)
        self.pushButton_TRcf_calc = QtGui.QPushButton(self.TabPage2)
        self.pushButton_TRcf_calc.setEnabled(False)
        self.pushButton_TRcf_calc.setObjectName(_fromUtf8("pushButton_TRcf_calc"))
        self.hboxlayout35.addWidget(self.pushButton_TRcf_calc)
        self.vboxlayout16.addLayout(self.hboxlayout35)
        self.hboxlayout36 = QtGui.QHBoxLayout()
        self.hboxlayout36.setSpacing(0)
        self.hboxlayout36.setObjectName(_fromUtf8("hboxlayout36"))
        self.vboxlayout17 = QtGui.QVBoxLayout()
        self.vboxlayout17.setObjectName(_fromUtf8("vboxlayout17"))
        self.groupBox1 = QtGui.QGroupBox(self.TabPage2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox1.sizePolicy().hasHeightForWidth())
        self.groupBox1.setSizePolicy(sizePolicy)
        self.groupBox1.setObjectName(_fromUtf8("groupBox1"))
        self.gridlayout19 = QtGui.QGridLayout(self.groupBox1)
        self.gridlayout19.setObjectName(_fromUtf8("gridlayout19"))
        self.gridlayout20 = QtGui.QGridLayout()
        self.gridlayout20.setObjectName(_fromUtf8("gridlayout20"))
        self.hboxlayout37 = QtGui.QHBoxLayout()
        self.hboxlayout37.setObjectName(_fromUtf8("hboxlayout37"))
        self.textLabel2 = QtGui.QLabel(self.groupBox1)
        self.textLabel2.setWordWrap(False)
        self.textLabel2.setObjectName(_fromUtf8("textLabel2"))
        self.hboxlayout37.addWidget(self.textLabel2)
        self.lineEdit_zmin = QtGui.QLineEdit(self.groupBox1)
        self.lineEdit_zmin.setObjectName(_fromUtf8("lineEdit_zmin"))
        self.hboxlayout37.addWidget(self.lineEdit_zmin)
        self.gridlayout20.addLayout(self.hboxlayout37, 0, 0, 1, 1)
        self.hboxlayout38 = QtGui.QHBoxLayout()
        self.hboxlayout38.setObjectName(_fromUtf8("hboxlayout38"))
        self.textLabel3_2 = QtGui.QLabel(self.groupBox1)
        self.textLabel3_2.setWordWrap(False)
        self.textLabel3_2.setObjectName(_fromUtf8("textLabel3_2"))
        self.hboxlayout38.addWidget(self.textLabel3_2)
        self.lineEdit_zmax = QtGui.QLineEdit(self.groupBox1)
        self.lineEdit_zmax.setObjectName(_fromUtf8("lineEdit_zmax"))
        self.hboxlayout38.addWidget(self.lineEdit_zmax)
        self.gridlayout20.addLayout(self.hboxlayout38, 1, 0, 1, 1)
        self.gridlayout19.addLayout(self.gridlayout20, 0, 0, 1, 1)
        self.vboxlayout17.addWidget(self.groupBox1)
        self.matplotlibWidget_TRC = MplWidget(self.TabPage2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.matplotlibWidget_TRC.sizePolicy().hasHeightForWidth())
        self.matplotlibWidget_TRC.setSizePolicy(sizePolicy)
        self.matplotlibWidget_TRC.setObjectName(_fromUtf8("matplotlibWidget_TRC"))
        self.vboxlayout17.addWidget(self.matplotlibWidget_TRC)
        self.hboxlayout36.addLayout(self.vboxlayout17)
        self.vboxlayout16.addLayout(self.hboxlayout36)
        self.gridlayout18.addLayout(self.vboxlayout16, 0, 0, 1, 1)
        self.tabWidget1.addTab(self.TabPage2, _fromUtf8(""))
        self.TabPage3 = QtGui.QWidget()
        self.TabPage3.setObjectName(_fromUtf8("TabPage3"))
        self.gridlayout21 = QtGui.QGridLayout(self.TabPage3)
        self.gridlayout21.setObjectName(_fromUtf8("gridlayout21"))
        self.vboxlayout18 = QtGui.QVBoxLayout()
        self.vboxlayout18.setSpacing(0)
        self.vboxlayout18.setObjectName(_fromUtf8("vboxlayout18"))
        self.splitter20 = QtGui.QSplitter(self.TabPage3)
        self.splitter20.setMinimumSize(QtCore.QSize(763, 29))
        self.splitter20.setMaximumSize(QtCore.QSize(16777215, 27))
        self.splitter20.setOrientation(QtCore.Qt.Horizontal)
        self.splitter20.setObjectName(_fromUtf8("splitter20"))
        self.splitter19 = QtGui.QSplitter(self.splitter20)
        self.splitter19.setOrientation(QtCore.Qt.Horizontal)
        self.splitter19.setObjectName(_fromUtf8("splitter19"))
        self.cf_label_TRcf_2 = QtGui.QLabel(self.splitter19)
        self.cf_label_TRcf_2.setEnabled(True)
        self.cf_label_TRcf_2.setMaximumSize(QtCore.QSize(100, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cf_label_TRcf_2.setFont(font)
        self.cf_label_TRcf_2.setWordWrap(False)
        self.cf_label_TRcf_2.setObjectName(_fromUtf8("cf_label_TRcf_2"))
        self.lineEdit_chi4_file = QtGui.QLineEdit(self.splitter19)
        self.lineEdit_chi4_file.setEnabled(True)
        self.lineEdit_chi4_file.setMinimumSize(QtCore.QSize(400, 0))
        self.lineEdit_chi4_file.setMaximumSize(QtCore.QSize(32767, 23))
        self.lineEdit_chi4_file.setObjectName(_fromUtf8("lineEdit_chi4_file"))
        self.splitter18 = QtGui.QSplitter(self.splitter20)
        self.splitter18.setOrientation(QtCore.Qt.Horizontal)
        self.splitter18.setObjectName(_fromUtf8("splitter18"))
        self.q_label_chi4 = QtGui.QLabel(self.splitter18)
        self.q_label_chi4.setEnabled(True)
        self.q_label_chi4.setMaximumSize(QtCore.QSize(80, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.q_label_chi4.setFont(font)
        self.q_label_chi4.setWordWrap(False)
        self.q_label_chi4.setObjectName(_fromUtf8("q_label_chi4"))
        self.q_lineEdit_chi4 = QtGui.QLineEdit(self.splitter18)
        self.q_lineEdit_chi4.setEnabled(True)
        self.q_lineEdit_chi4.setMaximumSize(QtCore.QSize(3267, 23))
        self.q_lineEdit_chi4.setObjectName(_fromUtf8("q_lineEdit_chi4"))
        self.layout41 = QtGui.QWidget(self.splitter20)
        self.layout41.setObjectName(_fromUtf8("layout41"))
        self.hboxlayout39 = QtGui.QHBoxLayout(self.layout41)
        self.hboxlayout39.setSpacing(0)
        self.hboxlayout39.setMargin(0)
        self.hboxlayout39.setObjectName(_fromUtf8("hboxlayout39"))
        self.pushButton_plot_chi4 = QtGui.QPushButton(self.layout41)
        self.pushButton_plot_chi4.setEnabled(True)
        self.pushButton_plot_chi4.setMaximumSize(QtCore.QSize(100, 32767))
        self.pushButton_plot_chi4.setObjectName(_fromUtf8("pushButton_plot_chi4"))
        self.hboxlayout39.addWidget(self.pushButton_plot_chi4)
        self.pushButton_chi4 = QtGui.QPushButton(self.layout41)
        self.pushButton_chi4.setEnabled(True)
        self.pushButton_chi4.setMaximumSize(QtCore.QSize(100, 32767))
        self.pushButton_chi4.setObjectName(_fromUtf8("pushButton_chi4"))
        self.hboxlayout39.addWidget(self.pushButton_chi4)
        self.vboxlayout18.addWidget(self.splitter20)
        self.hboxlayout40 = QtGui.QHBoxLayout()
        self.hboxlayout40.setSpacing(0)
        self.hboxlayout40.setObjectName(_fromUtf8("hboxlayout40"))
        self.matplotlibWidget_chi4 = MplWidget(self.TabPage3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.matplotlibWidget_chi4.sizePolicy().hasHeightForWidth())
        self.matplotlibWidget_chi4.setSizePolicy(sizePolicy)
        self.matplotlibWidget_chi4.setObjectName(_fromUtf8("matplotlibWidget_chi4"))
        self.hboxlayout40.addWidget(self.matplotlibWidget_chi4)
        self.checkBox_hold_chi4 = QtGui.QCheckBox(self.TabPage3)
        self.checkBox_hold_chi4.setMaximumSize(QtCore.QSize(50, 32767))
        self.checkBox_hold_chi4.setChecked(True)
        self.checkBox_hold_chi4.setObjectName(_fromUtf8("checkBox_hold_chi4"))
        self.hboxlayout40.addWidget(self.checkBox_hold_chi4)
        self.vboxlayout18.addLayout(self.hboxlayout40)
        self.gridlayout21.addLayout(self.vboxlayout18, 0, 0, 1, 1)
        self.tabWidget1.addTab(self.TabPage3, _fromUtf8(""))
        self.gridlayout.addWidget(self.tabWidget1, 0, 0, 1, 1)

        self.retranslateUi(Form1)
        self.tabWidget1.setCurrentIndex(0)
        self.comboBox_detector.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form1)

    def retranslateUi(self, Form1):
        Form1.setWindowTitle(_translate("Form1", "XPCS GUI version 1.1.1", None))
        self.textLabel1.setText(_translate("Form1", "Input file:", None))
        self.lineEdit_input.setText(_translate("Form1", "C:/test/analysis_Input.txt", None))
        self.pushButton1.setText(_translate("Form1", "&LOAD", None))
        self.pushButton1.setShortcut(_translate("Form1", "Alt+L", None))
        self.pushButton2.setText(_translate("Form1", "&SAVE", None))
        self.pushButton2.setShortcut(_translate("Form1", "Alt+S", None))
        self.pushButton10.setText(_translate("Form1", "START\n"
"Correlator", None))
        self.checkBox_plot.setText(_translate("Form1", "plot online", None))
        self.checkBox_multiproc.setText(_translate("Form1", "multiprocessor", None))
        self.textLabel4.setText(_translate("Form1", "data prefix:", None))
        self.lineEditDataPrefix.setText(_translate("Form1", "example_0001_", None))
        self.textLabel5.setText(_translate("Form1", "data suffix:", None))
        self.lineEditDataSuff.setText(_translate("Form1", ".edf", None))
        self.textLabel6.setText(_translate("Form1", "n first image:", None))
        self.lineEditDataStart.setText(_translate("Form1", "1", None))
        self.textLabel7.setText(_translate("Form1", "n last image:", None))
        self.lineEditDataEnd.setText(_translate("Form1", "1000", None))
        self.textLabel3.setText(_translate("Form1", "data directory:", None))
        self.lineEditDataDir.setText(_translate("Form1", "D:/test", None))
        self.toolButton_DataDir.setText(_translate("Form1", "...", None))
        self.checkBox_darks.setText(_translate("Form1", "use darks", None))
        self.textLabel8.setText(_translate("Form1", "darks directory:", None))
        self.lineEditDarkDir.setText(_translate("Form1", "D:/test", None))
        self.toolButton_DarkDir.setText(_translate("Form1", "...", None))
        self.textLabel10.setText(_translate("Form1", "n first dark:", None))
        self.lineEditDarkStart.setText(_translate("Form1", "1", None))
        self.textLabel11.setText(_translate("Form1", "n last dark:", None))
        self.lineEditDarkEnd.setText(_translate("Form1", "100", None))
        self.textLabel9.setText(_translate("Form1", "darks prefix:", None))
        self.lineEditDarkPrefix.setText(_translate("Form1", "example_0002_", None))
        self.comboBox_detector.setItemText(0, _translate("Form1", "Medipix", None))
        self.comboBox_detector.setItemText(1, _translate("Form1", "Princeton", None))
        self.comboBox_detector.setItemText(2, _translate("Form1", "Andor 22.5micron", None))
        self.comboBox_detector.setItemText(3, _translate("Form1", "Andor 13micron", None))
        self.checkBox_flatfield.setToolTip(_translate("Form1", "only used for  medipix", None))
        self.checkBox_flatfield.setText(_translate("Form1", "flatfield", None))
        self.comboBox_flatfield.setItemText(0, _translate("Form1", "8keV", None))
        self.comboBox_flatfield.setItemText(1, _translate("Form1", "8keV before april 2009", None))
        self.comboBox_flatfield.setItemText(2, _translate("Form1", "10keV", None))
        self.comboBox_flatfield.setItemText(3, _translate("Form1", "other", None))
        self.radioButton3.setText(_translate("Form1", "&SAXS", None))
        self.radioButton3.setShortcut(_translate("Form1", "Alt+S", None))
        self.radioButton4.setText(_translate("Form1", "&GISAXS", None))
        self.radioButton4.setShortcut(_translate("Form1", "Alt+G", None))
        self.radioButton5.setText(_translate("Form1", "WAXS", None))
        self.checkBox_droplet.setText(_translate("Form1", "dropletize", None))
        self.textLabel_photonadu_2.setText(_translate("Form1", "0 photon adu:", None))
        self.lineEdit_0PhotADU.setText(_translate("Form1", "0", None))
        self.textLabel_sigmaphoton_2.setText(_translate("Form1", "+/-", None))
        self.lineEdit_0PhotSigma.setText(_translate("Form1", "200", None))
        self.textLabel_photonadu.setText(_translate("Form1", "1photon ADU:", None))
        self.lineEdit_1PhotADU.setText(_translate("Form1", "1930", None))
        self.textLabel_sigmaphoton.setText(_translate("Form1", "+/-", None))
        self.lineEdit_1PhotSigma.setText(_translate("Form1", "100", None))
        self.textLabel12.setText(_translate("Form1", "output directory:", None))
        self.lineEdit12.setText(_translate("Form1", "D:/test", None))
        self.toolButton_outdir.setText(_translate("Form1", "...", None))
        self.textLabel13.setText(_translate("Form1", "output files prefix:", None))
        self.lineEdit13.setText(_translate("Form1", "sample1_", None))
        self.textLabel15.setText(_translate("Form1", "detecor-sample distance (mm):", None))
        self.lineEdit_dsd.setText(_translate("Form1", "2100", None))
        self.textLabel16.setText(_translate("Form1", "wavelength (1/Ang):", None))
        self.lineEdit_lambda.setText(_translate("Form1", "1.55", None))
        self.textLabel17.setText(_translate("Form1", "time between images (sec):", None))
        self.lineEdit17.setText(_translate("Form1", "auto", None))
        self.textLabel19.setText(_translate("Form1", "X direct beam:", None))
        self.lineEdit18.setText(_translate("Form1", "1", None))
        self.textLabel20.setText(_translate("Form1", "Y direct beam:", None))
        self.lineEdit19.setText(_translate("Form1", "30", None))
        self.textLabel22.setText(_translate("Form1", "incidence angle (deg):", None))
        self.lineEdit20.setText(_translate("Form1", "0.1", None))
        self.comboBox_normalize.setItemText(0, _translate("Form1", "None", None))
        self.comboBox_normalize.setItemText(1, _translate("Form1", "Average in CCD", None))
        self.textLabel_qTRC.setText(_translate("Form1", "q for TRC (no.):", None))
        self.lineEdit_qTRC.setText(_translate("Form1", "2", None))
        self.textLabel28.setText(_translate("Form1", "tolerance:", None))
        self.lineEdit_tolerance.setToolTip(_translate("Form1", "This defines a treshold: from princeton detector, all pixels with less than this value will be set to zero. For medipix, all pixels of the dark with more than this value will be masked. Put 0 if you don\'t want auto mask", None))
        self.lineEdit_tolerance.setWhatsThis(_translate("Form1", "This defines a treshold: from princeton detector, all pixels with less than this value will be set to zero. For medipix, all pixels of the dark with more than this value will be masked. Put 0 if you don\'t want auto mask", None))
        self.lineEdit_tolerance.setText(_translate("Form1", "0", None))
        self.textLabel29.setText(_translate("Form1", "first q (1/Ang):", None))
        self.lineEdit_firstq.setText(_translate("Form1", "0", None))
        self.textLabel31.setText(_translate("Form1", "step q (1/Ang):", None))
        self.lineEdit28.setText(_translate("Form1", "2e-4", None))
        self.textLabel32.setText(_translate("Form1", "no. of q:", None))
        self.lineEdit_nq.setText(_translate("Form1", "50", None))
        self.textLabel30.setText(_translate("Form1", "delta q (1/Ang):", None))
        self.lineEdit27.setText(_translate("Form1", "2e-4", None))
        self.tabWidget1.setTabText(self.tabWidget1.indexOf(self.tab), _translate("Form1", "Edit Input", None))
        self.Staticdata_label.setText(_translate("Form1", "static data file:", None))
        self.lineEdit_data.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.mask_label.setText(_translate("Form1", "mask file:", None))
        self.lineEdit_mask.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.lineEdit_mask.setText(_translate("Form1", "default", None))
        self.toolButtonMaskFile.setText(_translate("Form1", "...", None))
        self.dark_label.setText(_translate("Form1", "dark file:", None))
        self.lineEdit_dark.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.lineEdit_dark.setText(_translate("Form1", "default", None))
        self.toolButtonDarkFile.setText(_translate("Form1", "...", None))
        self.qmask_label.setText(_translate("Form1", "qmask file:", None))
        self.lineEdit_qmask.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.textLabel29_2.setText(_translate("Form1", "first q (1/Ang):", None))
        self.lineEdit_firstq_2.setText(_translate("Form1", "0", None))
        self.textLabel30_2.setText(_translate("Form1", "delta q (1/Ang):", None))
        self.lineEdit_deltaq_2.setText(_translate("Form1", "2e-4", None))
        self.textLabel31_2.setText(_translate("Form1", "step q (1/Ang):", None))
        self.lineEdit_stepq_2.setText(_translate("Form1", "2e-4", None))
        self.textLabel32_2.setText(_translate("Form1", "no. of q:", None))
        self.lineEdit_nq_2.setText(_translate("Form1", "50", None))
        self.textLabel_tolerance_2.setText(_translate("Form1", "tolerance:", None))
        self.lineEdit_tolerance_2.setToolTip(_translate("Form1", "This defines a treshold: from princeton detector, all pixels with less than this value will be set to zero. For medipix, all pixels of the dark with more than this value will be masked. Put 0 if you don\'t want auto mask", None))
        self.lineEdit_tolerance_2.setWhatsThis(_translate("Form1", "This defines a treshold: from princeton detector, all pixels with less than this value will be set to zero. For medipix, all pixels of the dark with more than this value will be masked. Put 0 if you don\'t want auto mask", None))
        self.lineEdit_tolerance_2.setText(_translate("Form1", "0", None))
        self.pushButtonMakeDark.setText(_translate("Form1", "Make Dark", None))
        self.pushButtonDoStaticFast.setToolTip(_translate("Form1", "Average first 20 images", None))
        self.pushButtonDoStaticFast.setText(_translate("Form1", "Make Quick\n"
"Static", None))
        self.pushButtonDoStaticAll.setToolTip(_translate("Form1", "average all images", None))
        self.pushButtonDoStaticAll.setText(_translate("Form1", "Make All\n"
"Static", None))
        self.pushButtonMakeMask.setText(_translate("Form1", "Make Mask", None))
        self.pushButton_makeQs.setText(_translate("Form1", "Make \n"
"Qs", None))
        self.pushButton10_2.setText(_translate("Form1", "Start \n"
"Correlator", None))
        self.pushButton16.setText(_translate("Form1", "Stop \n"
"Correlator", None))
        self.pushButtonDark.setText(_translate("Form1", "Show \n"
"Dark", None))
        self.pushButtonRaw.setText(_translate("Form1", "Show \n"
"raw data", None))
        self.pushButtonUnmasked.setText(_translate("Form1", "Show Unmasked\n"
"Data", None))
        self.pushButtonMasked.setText(_translate("Form1", "Show Masked\n"
"Data", None))
        self.pushButton_showQs.setText(_translate("Form1", "Show \n"
"Qs", None))
        self.pushButton_ShowIq.setText(_translate("Form1", "Show\n"
"I(q)", None))
        self.checkBox_zoom.setText(_translate("Form1", "fix zoom", None))
        self.tabWidget1.setTabText(self.tabWidget1.indexOf(self.TabPage), _translate("Form1", "Correlator", None))
        self.cf_label.setText(_translate("Form1", "correlation functions file:", None))
        self.lineEdit_cf.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.Staticdata_label_2.setText(_translate("Form1", "q number:", None))
        self.lineEdit_plotq.setText(_translate("Form1", "all", None))
        self.pushButton_cf_del.setText(_translate("Form1", "PLOT", None))
        self.pushButton_del_cf.setText(_translate("Form1", "REMOVE", None))
        self.pushButton23.setText(_translate("Form1", "Start\n"
"Fitting", None))
        self.checkBox_hold.setText(_translate("Form1", "Hold", None))
        self.tabWidget1.setTabText(self.tabWidget1.indexOf(self.TabPage1), _translate("Form1", "Correlation Functions", None))
        self.cf_label_TRcf.setText(_translate("Form1", "TR correlation functions file:", None))
        self.lineEdit_TRcf.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.q_label.setText(_translate("Form1", "q number:", None))
        self.lineEdit_plotq_TRcf.setText(_translate("Form1", "2", None))
        self.pushButton_TRcf_plot.setText(_translate("Form1", "PLOT", None))
        self.pushButton_TRcf_calc.setText(_translate("Form1", "CALCULATE", None))
        self.textLabel2.setText(_translate("Form1", "Z min:", None))
        self.lineEdit_zmin.setText(_translate("Form1", "auto", None))
        self.textLabel3_2.setText(_translate("Form1", "Z max:", None))
        self.lineEdit_zmax.setText(_translate("Form1", "auto", None))
        self.tabWidget1.setTabText(self.tabWidget1.indexOf(self.TabPage2), _translate("Form1", "Time Resolved CF", None))
        self.cf_label_TRcf_2.setText(_translate("Form1", "Chi 4 file:", None))
        self.lineEdit_chi4_file.setWhatsThis(_translate("Form1", "If this file exist, it will be loaded, otherwise when you create the mask, it will be saved with this name. (it is the output directory+the output_file_prefix+ \'_mask.edf\' as given in the Edit Input tab", None))
        self.q_label_chi4.setText(_translate("Form1", "q number:", None))
        self.q_lineEdit_chi4.setText(_translate("Form1", "2", None))
        self.pushButton_plot_chi4.setText(_translate("Form1", "PLOT", None))
        self.pushButton_chi4.setText(_translate("Form1", "CALCULATE", None))
        self.checkBox_hold_chi4.setText(_translate("Form1", "Hold", None))
        self.tabWidget1.setTabText(self.tabWidget1.indexOf(self.TabPage3), _translate("Form1", "Chi_4 analysis", None))







################################ connect buttons #############################

#        QtCore.QObject.connect(self.pushButton23, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.fit)
#        QtCore.QObject.connect(self.pushButton_cf_del, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.plot_cf)
#        QtCore.QObject.connect(self.pushButton_chi4, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.chi4)
#        QtCore.QObject.connect(self.pushButton_del_cf, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.del_cf)
#        QtCore.QObject.connect(self.pushButton_plot_chi4, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.plot_chi4)
#        QtCore.QObject.connect(self.pushButton_TRcf_calc, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.calc_TRCF)
#        QtCore.QObject.connect(self.pushButton_TRcf_plot, QtCore.SIGNAL(_fromUtf8("pressed()")), Form1.plot_TRcf)
#        QtCore.QObject.connect(self.tabWidget1, QtCore.SIGNAL(_fromUtf8("currentChanged(QWidget*)")), Form1.update_text)
#        QtCore.QObject.connect(self.tabWidget1, QtCore.SIGNAL(_fromUtf8("currentChanged(QWidget*)")), Form1.update_text)
#        QtCore.QObject.connect(self.pushButton_TRcf_calc, QtCore.SIGNAL(_fromUtf8("stateChanged(int)")), Form1.dostatic)
#        QtCore.QMetaObject.connectSlotsByName(Form1)
#        QtCore.QObject.connect(self.pushButton_chi4, QtCore.SIGNAL(_fromUtf8("pressed()")), self.chi4)

#        self.connect(self.checkBox_darks,SIGNAL("toggled(bool)"),self.pushButtonMakeDark.setEnabled)
        QtCore.QObject.connect(self.checkBox_darks, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.pushButtonMakeDark.setEnabled)
#        self.connect(self.checkBox_darks,SIGNAL("toggled(bool)"),self.pushButtonRaw.setEnabled)
        QtCore.QObject.connect(self.checkBox_darks, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.pushButtonRaw.setEnabled) 
#        self.connect(self.checkBox_darks,SIGNAL("toggled(bool)"),self.pushButtonDark.setEnabled)
        QtCore.QObject.connect(self.checkBox_darks, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.pushButtonDark.setEnabled)
#        self.connect(self.checkBox_darks,SIGNAL("toggled(bool)"),self.frame2.setEnabled)
        QtCore.QObject.connect(self.checkBox_darks, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.frame2.setEnabled)
#        self.connect(self.checkBox_droplet,SIGNAL("toggled(bool)"),self.groupBox3.setEnabled)
        QtCore.QObject.connect(self.checkBox_droplet, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.groupBox3.setEnabled)
#        self.connect(self.checkBox_flatfield,SIGNAL("toggled(bool)"),self.comboBox_flatfield.setEnabled)
        QtCore.QObject.connect(self.checkBox_flatfield, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.comboBox_flatfield.setEnabled)
#        self.connect(self.comboBox_detector,SIGNAL("activated(int)"),self.activate_flatfield)
        QtCore.QObject.connect(self.comboBox_detector, QtCore.SIGNAL(_fromUtf8("activated(int)")), self.activate_flatfield)
#        self.connect(self.comboBox_detector,SIGNAL("activated(int)"),self.SetNormalizeList)
        QtCore.QObject.connect(self.comboBox_detector, QtCore.SIGNAL(_fromUtf8("activated(int)")), self.SetNormalizeList)
#        self.connect(self.comboBox_flatfield,SIGNAL("activated(int)"),self.activateLoad)
        QtCore.QObject.connect(self.comboBox_flatfield, QtCore.SIGNAL(_fromUtf8("activated(int)")), self.activateLoad)
#        self.connect(self.lineEdit27,SIGNAL("textChanged(const QString&)"),self.lineEdit_deltaq_2.setText)
        QtCore.QObject.connect(self.lineEdit27, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_deltaq_2.setText)
#        self.connect(self.lineEdit28,SIGNAL("textChanged(const QString&)"),self.lineEdit_stepq_2.setText)
        QtCore.QObject.connect(self.lineEdit28, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_stepq_2.setText)
#        self.connect(self.lineEdit_deltaq_2,SIGNAL("textChanged(const QString&)"),self.lineEdit27.setText)
        QtCore.QObject.connect(self.lineEdit_deltaq_2, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit27.setText)
#        self.connect(self.lineEdit_firstq,SIGNAL("textChanged(const QString&)"),self.lineEdit_firstq_2.setText)
        QtCore.QObject.connect(self.lineEdit_firstq, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_firstq_2.setText)
#        self.connect(self.lineEdit_firstq_2,SIGNAL("textChanged(const QString&)"),self.lineEdit_firstq.setText)
        QtCore.QObject.connect(self.lineEdit_firstq_2, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_firstq.setText)
#        self.connect(self.lineEdit_nq,SIGNAL("textChanged(const QString&)"),self.lineEdit_nq_2.setText)
        QtCore.QObject.connect(self.lineEdit_nq, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_nq_2.setText)
#        self.connect(self.lineEdit_nq_2,SIGNAL("textChanged(const QString&)"),self.lineEdit_nq.setText)
        QtCore.QObject.connect(self.lineEdit_nq_2, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_nq.setText)
#        self.connect(self.lineEdit_stepq_2,SIGNAL("textChanged(const QString&)"),self.lineEdit28.setText)
        QtCore.QObject.connect(self.lineEdit_stepq_2, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit28.setText)
#        self.connect(self.lineEdit_tolerance,SIGNAL("textChanged(const QString&)"),self.lineEdit_tolerance_2.setText)
        QtCore.QObject.connect(self.lineEdit_tolerance, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_tolerance_2.setText)
#        self.connect(self.lineEdit_tolerance_2,SIGNAL("returnPressed()"),self.pushButtonMasked.animateClick)
        QtCore.QObject.connect(self.lineEdit_tolerance_2, QtCore.SIGNAL(_fromUtf8("returnPressed()")), self.pushButtonMasked.animateClick)
#        self.connect(self.lineEdit_tolerance_2,SIGNAL("textChanged(const QString&)"),self.lineEdit_tolerance.setText)
        QtCore.QObject.connect(self.lineEdit_tolerance_2, QtCore.SIGNAL(_fromUtf8("textChanged(const QString&)")), self.lineEdit_tolerance.setText)
#        self.connect(self.pushButton1,SIGNAL("clicked()"),self.loadinput)
        QtCore.QObject.connect(self.pushButton1, QtCore.SIGNAL(_fromUtf8("clicked()")), self.loadinput)
#        self.connect(self.pushButton10,SIGNAL("pressed()"),self.correlator)
        QtCore.QObject.connect(self.pushButton10, QtCore.SIGNAL(_fromUtf8("pressed()")), self.correlator)
#        self.connect(self.pushButton10_2,SIGNAL("pressed()"),self.correlator)
        QtCore.QObject.connect(self.pushButton10_2, QtCore.SIGNAL(_fromUtf8("pressed()")), self.correlator)
#        self.connect(self.pushButton16,SIGNAL("pressed()"),self.stop_correlator)
        QtCore.QObject.connect(self.pushButton16, QtCore.SIGNAL(_fromUtf8("pressed()")), self.stop_correlator)
#        self.connect(self.pushButton2,SIGNAL("pressed()"),self.makeinput)
        QtCore.QObject.connect(self.pushButton2, QtCore.SIGNAL(_fromUtf8("pressed()")), self.makeinput)
#        self.connect(self.pushButton23,SIGNAL("pressed()"),self.fit)
        QtCore.QObject.connect(self.pushButton23, QtCore.SIGNAL(_fromUtf8("pressed()")), self.fit)
#        self.connect(self.pushButton_cf_del,SIGNAL("pressed()"),self.plot_cf)
        QtCore.QObject.connect(self.pushButton_cf_del, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_cf)
#        self.connect(self.pushButton_chi4,SIGNAL("pressed()"),self.chi4)
        QtCore.QObject.connect(self.pushButton_chi4, QtCore.SIGNAL(_fromUtf8("pressed()")), self.chi4)
#        self.connect(self.pushButtonDark,SIGNAL("pressed()"),self.plot_dark)
        QtCore.QObject.connect(self.pushButtonDark, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_dark)
#        self.connect(self.pushButton_del_cf,SIGNAL("pressed()"),self.del_cf)
        QtCore.QObject.connect(self.pushButton_del_cf, QtCore.SIGNAL(_fromUtf8("pressed()")), self.del_cf)
#        self.connect(self.pushButtonDoStaticAll,SIGNAL("pressed()"),self.dostatic_all)
        QtCore.QObject.connect(self.pushButtonDoStaticAll, QtCore.SIGNAL(_fromUtf8("pressed()")), self.dostatic_all)
#        self.connect(self.pushButtonDoStaticFast,SIGNAL("pressed()"),self.dostatic_quick)
        QtCore.QObject.connect(self.pushButtonDoStaticFast, QtCore.SIGNAL(_fromUtf8("pressed()")), self.dostatic_quick)
#        self.connect(self.pushButtonMakeDark,SIGNAL("pressed()"),self.dodarks)
        QtCore.QObject.connect(self.pushButtonMakeDark, QtCore.SIGNAL(_fromUtf8("pressed()")), self.dodarks)
#        self.connect(self.pushButtonMakeMask,SIGNAL("pressed()"),self.user_mask)
        QtCore.QObject.connect(self.pushButtonMakeMask, QtCore.SIGNAL(_fromUtf8("pressed()")), self.user_mask)
#        self.connect(self.pushButton_makeQs,SIGNAL("pressed()"),self.Qs)
        QtCore.QObject.connect(self.pushButton_makeQs, QtCore.SIGNAL(_fromUtf8("pressed()")), self.Qs)
#        self.connect(self.pushButtonMasked,SIGNAL("pressed()"),self.plot_masked)
        QtCore.QObject.connect(self.pushButtonMasked, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_masked)
#        self.connect(self.pushButton_plot_chi4,SIGNAL("pressed()"),self.plot_chi4)
        QtCore.QObject.connect(self.pushButton_plot_chi4, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_chi4)
#        self.connect(self.pushButtonRaw,SIGNAL("pressed()"),self.plot_raw)
        QtCore.QObject.connect(self.pushButtonRaw, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_raw)
#        self.connect(self.pushButton_ShowIq,SIGNAL("pressed()"),self.Iq)
        QtCore.QObject.connect(self.pushButton_ShowIq, QtCore.SIGNAL(_fromUtf8("pressed()")), self.Iq)
#        self.connect(self.pushButton_showQs,SIGNAL("pressed()"),self.plotQmask)
        QtCore.QObject.connect(self.pushButton_showQs, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plotQmask)
#        self.connect(self.pushButton_TRcf_calc,SIGNAL("pressed()"),self.calc_TRCF)
        QtCore.QObject.connect(self.pushButton_TRcf_calc, QtCore.SIGNAL(_fromUtf8("pressed()")), self.calc_TRCF)
#        self.connect(self.pushButton_TRcf_plot,SIGNAL("pressed()"),self.plot_TRcf)
        QtCore.QObject.connect(self.pushButton_TRcf_plot, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_TRcf)
#        self.connect(self.pushButtonUnmasked,SIGNAL("pressed()"),self.plot_unmasked)
        QtCore.QObject.connect(self.pushButtonUnmasked, QtCore.SIGNAL(_fromUtf8("pressed()")), self.plot_unmasked)
#        self.connect(self.radioButton3,SIGNAL("toggled(bool)"),self.lineEdit20.setDisabled)
        QtCore.QObject.connect(self.radioButton3, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.lineEdit20.setDisabled)
#        self.connect(self.radioButton3,SIGNAL("toggled(bool)"),self.textLabel22.setDisabled)
        QtCore.QObject.connect(self.radioButton3, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.textLabel22.setDisabled)
#        self.connect(self.radioButton3,SIGNAL("toggled(bool)"),self.groupBox3.setDisabled)
        QtCore.QObject.connect(self.radioButton3, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.groupBox3.setDisabled)
#        self.connect(self.radioButton3,SIGNAL("toggled(bool)"),self.change_labelsback)
        QtCore.QObject.connect(self.radioButton3, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.change_labelsback)
#        self.connect(self.radioButton3,SIGNAL("toggled(bool)"),self.change_labelsbeamback)
        QtCore.QObject.connect(self.radioButton3, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.change_labelsbeamback)
#        self.connect(self.radioButton4,SIGNAL("toggled(bool)"),self.groupBox3.setDisabled)
        QtCore.QObject.connect(self.radioButton4, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.groupBox3.setDisabled)
#        self.connect(self.radioButton4,SIGNAL("toggled(bool)"),self.change_labelsback)
        QtCore.QObject.connect(self.radioButton4, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.change_labelsback)
#        self.connect(self.radioButton4,SIGNAL("toggled(bool)"),self.change_labelsbeam)
        QtCore.QObject.connect(self.radioButton4, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.change_labelsbeam)
#        self.connect(self.radioButton5,SIGNAL("toggled(bool)"),self.lineEdit20.setDisabled)
        QtCore.QObject.connect(self.radioButton5, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.lineEdit20.setDisabled)
#        self.connect(self.radioButton5,SIGNAL("toggled(bool)"),self.textLabel22.setDisabled)
        QtCore.QObject.connect(self.radioButton5, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.textLabel22.setDisabled)
#        self.connect(self.radioButton5,SIGNAL("toggled(bool)"),self.checkBox_droplet.setEnabled)
        QtCore.QObject.connect(self.radioButton5, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.checkBox_droplet.setEnabled)
#        self.connect(self.radioButton5,SIGNAL("toggled(bool)"),self.change_labelsbeamback)
        QtCore.QObject.connect(self.radioButton5, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.change_labelsbeamback)
#        self.connect(self.tabWidget1,SIGNAL("currentChanged(QWidget*)"),self.update_text)
        QtCore.QObject.connect(self.tabWidget1, QtCore.SIGNAL(_fromUtf8("currentChanged(QWidget*)")), self.update_text)
#        self.connect(self.tabWidget1,SIGNAL("currentChanged(QWidget*)"),self.update_text)
        QtCore.QObject.connect(self.tabWidget1, QtCore.SIGNAL(_fromUtf8("currentChanged(QWidget*)")), self.update_text)
#        self.connect(self.toolButton_DarkDir,SIGNAL("clicked()"),self.LoadDarkDir)
        QtCore.QObject.connect(self.toolButton_DarkDir, QtCore.SIGNAL(_fromUtf8("clicked()")), self.LoadDarkDir)
#        self.connect(self.toolButtonDarkFile,SIGNAL("clicked()"),self.LoadDarkFile)
        QtCore.QObject.connect(self.toolButtonDarkFile, QtCore.SIGNAL(_fromUtf8("clicked()")), self.LoadDarkFile)
#        self.connect(self.toolButton_DataDir,SIGNAL("clicked()"),self.LoadDataDir)
        QtCore.QObject.connect(self.toolButton_DataDir, QtCore.SIGNAL(_fromUtf8("clicked()")), self.LoadDataDir)
#        self.connect(self.toolButtonMaskFile,SIGNAL("clicked()"),self.LoadMaskFile)
        QtCore.QObject.connect(self.toolButtonMaskFile, QtCore.SIGNAL(_fromUtf8("clicked()")), self.LoadMaskFile)
#        self.connect(self.toolButton_outdir,SIGNAL("clicked()"),self.LoadOutDir)
        QtCore.QObject.connect(self.toolButton_outdir, QtCore.SIGNAL(_fromUtf8("clicked()")), self.LoadOutDir)
##        self.connect(self.pushButton_TRcf_calc,SIGNAL("stateChanged(int)"),self.dostatic)

       






################################### defining functions ########################


    def loadinput(self,window=1):
           if window == 1:
#              PathLineEdit=self.lineEdit_input.text().ascii()
              filename = QtGui.QFileDialog.getOpenFileName()
              if filename:
                 self.lineEdit_input.setText(filename)
              else: 
                 filename=self.lineEdit_input.text()
           else:
              filename=self.lineEdit_input.text()
           input_info=get_input(filename)
           self.lineEditDataDir.setText(input_info['dir'])
           self.lineEditDataPrefix.setText(input_info['file_prefix'])
           self.lineEditDataSuff.setText(input_info['file_suffix'])
           self.lineEditDataStart.setText(input_info['n_first_image'])
           self.lineEditDataEnd.setText(input_info['n_last_image'])
           if input_info['n_first_dark'].lower()=='none':
              self.checkBox_darks.setChecked(0)
           else:
              self.checkBox_darks.setChecked(1)
              self.lineEditDarkDir.setText(input_info['dark dir'])
              self.lineEditDarkPrefix.setText(input_info['dark_prefix'])
              self.lineEditDarkStart.setText(input_info['n_first_dark'])
              self.lineEditDarkEnd.setText(input_info['n_last_dark'])
           self.lineEdit12.setText(input_info['output directory'])
           self.lineEdit13.setText(input_info['output filename prefix'])
           if input_info['detector'].lower()=='medipix':
              self.comboBox_detector.setCurrentIndex(0)
              self.checkBox_flatfield.setEnabled(1)
              try:
                 flat_file=input_info['flatfield file'].lower()
                 if flat_file == 'none' :
                    self.checkBox_flatfield.setChecked(0)
                    self.comboBox_flatfield.setEnabled(0)
                 else:
                    self.checkBox_flatfield.setChecked(1)
                    self.comboBox_flatfield.setEnabled(1) 
                    if flat_file == '8kev' :
                      self.comboBox_flatfield.setCurrentIndex(0)
                    elif flat_file == '8kev before april 2009' :
                      self.comboBox_flatfield.setCurrentIndex(1)
                    elif flat_file == '10kev' :
                      self.comboBox_flatfield.setCurrentIndex(2)
                    else:
                      self.comboBox_flatfield.setCurrentIndex(3)
                      self.lineEdit_other.setText(input_info['flatfield file'])
              except:
                    self.checkBox_flatfield.setChecked(1)
                    self.comboBox_flatfield.setCurrentIndex(1)
           else:
              self.checkBox_flatfield.setChecked(0)
              self.checkBox_flatfield.setEnabled(0)
              self.comboBox_flatfield.setEnabled(0)
           if input_info['detector'].lower()=='princeton':
              self.comboBox_detector.setCurrentIndex(1)
           if input_info['detector'].lower()=='andor 22.5micron':
              self.comboBox_detector.setCurrentIndex(2)
           if input_info['detector'].lower()== 'andor 13micron': 
              self.comboBox_detector.setCurrentIndex(3)
           if input_info['detector'].lower()=='andor': #andor alone is for old input files
              self.comboBox_detector.setCurrentIndex(3)
#           self.SetNormalizeList()
           self.lineEdit_dsd.setText(input_info['detector sample distance'])
           self.lineEdit_lambda.setText(input_info['wavelength'])
           self.lineEdit17.setText(input_info['lag time'])
           if input_info['geometry']=='saxs':
              self.radioButton3.setChecked(1)
              self.lineEdit18.setText(input_info['x direct beam'])
              self.lineEdit19.setText(input_info['y direct beam'])
           if input_info['geometry']=='gisaxs':
              self.radioButton4.setChecked(1)
              self.lineEdit18.setText(input_info['x reflected beam'])
              self.lineEdit19.setText(input_info['y reflected beam'])
              self.lineEdit20.setText(input_info['incidence angle'])
           if input_info['geometry']=='waxs':
              self.radioButton5.setChecked(1)
              self.lineEdit18.setText(input_info['x direct beam'])
              self.lineEdit19.setText(input_info['y direct beam'])
              self.checkBox_droplet.setEnabled(1)
              try:
                if input_info['dropletize'].lower()=='yes':
                  self.checkBox_droplet.setChecked(1)
                  self.lineEdit_0PhotADU.setText(input_info['0 Photon ADU'])
                  self.lineEdit_0PhotSigma.setText(input_info['0 Photon Sigma'])
                  self.lineEdit_1PhotADU.setText(input_info['1 Photon ADU'])
                  self.lineEdit_1PhotSigma.setText(input_info['1 Photon Sigma'])
                else:
                  self.checkBox_droplet.setChecked(0)
              except:
                self.checkBox_droplet.setChecked(0)
           self.lineEdit_firstq.setText(input_info['first q'])
           self.lineEdit27.setText(input_info['delta q'])
           self.lineEdit28.setText(input_info['step q'])
           self.lineEdit_nq.setText(input_info['number of q'])
           self.lineEdit_qTRC.setText(input_info['q for TRC'])
           self.lineEdit_plotq_TRcf.setText(input_info['q for TRC'])
           self.q_lineEdit_chi4.setText(input_info['q for TRC'])
           self.lineEdit_tolerance.setText(input_info['tolerance'])
           self.lineEdit_tolerance_2.setText(input_info['tolerance'])
           try:
              self.lineEdit_mask.setText(input_info['mask file'])
              self.lineEdit_dark.setText(input_info['dark file'])
           except:
              self.lineEdit_mask.setText(self.lineEdit12.text()+'/'+self.lineEdit13.text()+'mask.edf')
              self.lineEdit_dark.setText(self.lineEdit12.text()+'/'+self.lineEdit13.text()+'dark.edf')
           try:
              normalize=input_info['normalize'].lower()
              if normalize== 'none':
                 self.comboBox_normalize.setCurrentIndex(0)  
              if normalize== 'average in ccd':
                 self.comboBox_normalize.setCurrentIndex(1)
              if normalize== 'monitor':
                 self.comboBox_normalize.setCurrentIndex(2)
           except:
              self.comboBox_normalize.setCurrentIndex(0)  
           self.update_text()
           outdir=input_info['output directory']
           print outdir
           if os.path.exists(outdir) is False:
              com='mkdir '+outdir
              print getoutput(com)
              if os.path.exists(outdir) is False:
                 print 'cannot create output directory, please check if there is some error'
              else:
                 print 'created output directory:', outdir
        

    def makeinput(self):  
           filename=str(self.lineEdit_input.text())
           self.lineEdit_input.setText(os.path.realpath(filename))
           try:
              f=open(filename,'w')
           except:
              print "wrong directory for the file: ",filename
              return
           dir=os.path.realpath(str(self.lineEditDataDir.text()))
           if dir[-1]!='/':
              dir=dir+'/'
           f.write('dir = '+ dir+'\n')
           f_prefix=str(self.lineEditDataPrefix.text())
           f.write('file_prefix = '+ f_prefix+'\n')
           f_suffix=str(self.lineEditDataSuff.text())
           f.write('file_suffix = '+ f_suffix+'\n')
           n_image=str(self.lineEditDataStart.text())
           f.write('n_first_image = '+ n_image+'\n')
           n_image=str(self.lineEditDataEnd.text())
           f.write('n_last_image = '+ n_image+'\n')
           if self.checkBox_darks.isChecked():
              dark_dir=str(self.lineEditDarkDir.text())
              if dark_dir=='':
                 dark_dir=dir
              dark_dir=os.path.realpath(dark_dir)
              if dark_dir[-1]!='/':
                 dark_dir=dark_dir+'/'
              f.write('dark dir = ' +dark_dir +'\n')
              dark_prefix=str(self.lineEditDarkPrefix.text())
              f.write('dark_prefix = '+ dark_prefix +'\n')
              dark1=str(self.lineEditDarkStart.text())
              f.write('n_first_dark = '+ dark1 + '\n')
              dark2=str(self.lineEditDarkEnd.text())
              f.write('n_last_dark = ' + dark2 + '\n')
           else:
              f.write('dark dir = none \n')
              f.write('dark_prefix = none \n')
              f.write('n_first_dark = none \n')
              f.write('n_last_dark = none \n')
           
           outdir=str(self.lineEdit12.text())
           if (outdir=='' or outdir=='none'):
              outdir='./'
           else:
              if outdir[-1]!='/':
                 outdir=outdir+'/'
           if os.path.exists(outdir) is False:
              com='mkdir '+outdir
              print getoutput(com)
              if os.path.exists(outdir) is False:
                 print 'cannot create output directory, please check if there is some error'
              else:
                 print 'created output directory:', outdir
                 outdir=os.path.realpath(outdir)
           f.write('output directory = '+ outdir + '\n')
           outprefix=str(self.lineEdit13.text())
           f.write('output filename prefix = '+ outprefix + '\n')
           mask_file=str(self.lineEdit_mask.text())
           if mask_file=='default':
              mask_file=outdir+outprefix+'mask.edf'
           if mask_file=='':
              mask_file=outdir+outprefix+'mask.edf'  
           self.lineEdit_mask.setText(mask_file)
           f.write('mask file = '+ mask_file + '\n')
           dark_file=str(self.lineEdit_dark.text())
           if dark_file=='default':
              dark_file=outdir+outprefix+'dark.edf'
           if dark_file=='':
              dark_file=outdir+outprefix+'dark.edf'
           self.lineEdit_dark.setText(dark_file)
           f.write('dark file = '+ dark_file + '\n')
           detector=str(self.comboBox_detector.currentText()).lower()
           f.write('detector = ' +detector+ '\n')
           if self.checkBox_flatfield.isChecked():
              flatfield_file=str(self.comboBox_flatfield.currentText())
              if flatfield_file=='other':
                 flatfield_file=str(self.lineEdit_other.text())
           else:
              flatfield_file='none'
           f.write('flatfield file = '+flatfield_file+'\n')
           dsd=str(self.lineEdit_dsd.text())
           f.write('detector sample distance = '+dsd+'\n')
           lam=str(self.lineEdit_lambda.text())
           f.write('wavelength = '+lam+'\n')
           dt=str(self.lineEdit17.text())
           if dt=='':
              dt='auto'
           f.write('lag time = '+dt+'\n')
           if self.radioButton3.isChecked():
              f.write('geometry = saxs \n')
              xbeam=str(self.lineEdit18.text())
              ybeam=str(self.lineEdit19.text())
              f.write('x direct beam = ' +xbeam+'\n')
              f.write('y direct beam = ' +ybeam+'\n')
           if self.radioButton4.isChecked():
              f.write('geometry = gisaxs \n')
              xbeam=str(self.lineEdit18.text())
              ybeam=str(self.lineEdit19.text())
              f.write('x reflected beam = '+ xbeam+'\n')
              f.write('y reflected beam = ' + ybeam+'\n')
              angle=str(self.lineEdit20.text())
              f.write('incidence angle = '+ angle+'\n')
           if self.radioButton5.isChecked():
              f.write('geometry = waxs \n')
              xbeam=str(self.lineEdit18.text())
              ybeam=str(self.lineEdit19.text())
           if self.checkBox_droplet.isChecked():
              f.write('dropletize = yes \n')
              ZerophotADU=str(self.lineEdit_0PhotADU.text())
              ZerophotSigma=str(self.lineEdit_0PhotSigma.text())
              OnephotADU=str(self.lineEdit_1PhotADU.text())
              OnephotSigma=str(self.lineEdit_1PhotSigma.text())
           else:
              f.write('dropletize = no \n')
              ZerophotADU='none'
              ZerophotSigma='none'
              OnephotADU='none'
              OnephotSigma='none'
           f.write('0 Photon ADU = ' +ZerophotADU+'\n')
           f.write('0 Photon Sigma = ' +ZerophotSigma+'\n')
           f.write('1 Photon ADU = ' +OnephotADU+'\n')
           f.write('1 Photon Sigma = ' +OnephotSigma+'\n')
           f.write('x direct beam = ' +xbeam+'\n')
           f.write('y direct beam = ' +ybeam+'\n')
           normalize=str(self.comboBox_normalize.currentText()).lower()
           f.write('normalize = ' +normalize+'\n')
           darkstatus=self.checkBox_darks.isChecked()
           tol=float(self.lineEdit_tolerance.text())
           if (detector=='medipix')&(darkstatus is False)&(tol>0):
             self.lineEdit_tolerance.setText('0')
             self.lineEdit_tolerance_2.setText('0')
           tol=str(self.lineEdit_tolerance.text())
           f.write('tolerance = '+ tol+'\n')
           q1=str(self.lineEdit_firstq.text())
           f.write('first q = '+ q1+'\n')
           dq=str(self.lineEdit27.text())
           f.write('delta q = '+ dq+'\n')
           sq=str(self.lineEdit28.text())
           f.write('step q = '+ sq+'\n')
           nq=str(self.lineEdit_nq.text())
           f.write('number of q = '+ nq+'\n')
           nq_TRC=str(self.lineEdit_qTRC.text())
           f.write('q for TRC = '+ nq_TRC+'\n')
           f.close()
           print 'new input file created:', filename
        
        
        
        

    def change_labelsq(self):
           self.textLabel29.setText('first angle (in degrees)')
           self.textLabel30.setText('delta angle (in degrees)')
           self.textLabel31.setText('step angle (in degrees)')
           self.textLabel32.setText('no. of angle')
           self.textLabel29_2.setText('first angle (in degrees)')
           self.textLabel30_2.setText('delta angle (in degrees)')
           self.textLabel31_2.setText('step angle (in degrees)')
        

    def change_labelsback(self):
           Inv_Ang=u"(\u00C5\u207B\u00B9):"
           Ang=u"(\u00C5):"
           self.textLabel16.setText('waverlength '+ Ang)
           self.textLabel29.setText('first q '+ Inv_Ang)
           self.textLabel30.setText('delta q '+Inv_Ang)
           self.textLabel31.setText('step q ' + Inv_Ang)
           self.textLabel32.setText('no. of q')
           self.textLabel29_2.setText('first q '+ Inv_Ang)
           self.textLabel30_2.setText('delta q '+Inv_Ang)
           self.textLabel31_2.setText('step q ' + Inv_Ang)
        

    def user_mask(self):
          self.makeinput()
          mask_file=self.lineEdit_mask.text()
          data_file=self.lineEdit_data.text()
          if os.path.exists(data_file) is False:
             print 'static data ', data_file, "doesn't exist: using first image"
             dir=self.lineEditDataDir.text()
             prefix=self.lineEditDataPrefix.text()
             suffix=self.lineEditDataSuff.text()
             no=self.lineEditDataStart.text()
             data_file=dir+file_name(prefix,suffix,no)
          if os.path.exists(mask_file) is False:
             self.automask()
          else:
             make_mask(data_file,mask_file)
          print 'done'
          self.plot_masked()
        
        

    def plot_masked(self):
          self.makeinput()
          data_file=self.lineEdit_data.text()
          if os.path.exists(data_file) is False:
             self.dostatic_quick()
          data=loadedf(data_file)
          mask_file=self.lineEdit_mask.text()
          print mask_file
          self.automask()
          mymask=loadedf(mask_file,0)+loadedf(mask_file,1)
          print 'plotted masked data'
          if self.checkBox_zoom.isChecked():
             self.matplotlibWidget1.update_figure(0,data+1,data_file,mymask,Zoom='fixed')
          else:
             self.matplotlibWidget1.update_figure(0,data+1,data_file,mymask)
        

    def plot_unmasked(self):
          self.makeinput()
          data_file=self.lineEdit_data.text()
          if os.path.exists(data_file) is True:
             data=loadedf(data_file)
             if self.checkBox_zoom.isChecked():
                self.matplotlibWidget1.update_figure(1,data+1,data_file,Zoom='fixed')
             else:
                self.matplotlibWidget1.update_figure(1,data+1,data_file)
        

    def update_text(self):
          data_file=self.lineEdit12.text()+self.lineEdit13.text()+'static.edf'
          qmask_file=self.lineEdit12.text()+self.lineEdit13.text()+'qmask.edf'
          cf_file=self.lineEdit12.text()+self.lineEdit13.text()+'cf.dat'
          nq=self.lineEdit_plotq_TRcf.text()
          TRcf_file=self.lineEdit12.text()+self.lineEdit13.text()+'2times_q_'+nq+'.edf'
          nq_chi4=self.q_lineEdit_chi4.text()
          chi4_file=self.lineEdit12.text()+self.lineEdit13.text()+'fitchi4_q_'+nq_chi4+'.dat'
          self.lineEdit_data.setText(data_file)
          self.lineEdit_qmask.setText(qmask_file)
          self.lineEdit_cf.setText(cf_file)
          self.lineEdit_TRcf.setText(TRcf_file)
          self.lineEdit_chi4_file.setText(chi4_file)
         
        
        

    def dodarks(self): 
             self.makeinput()
             print 'calculating dark...'
             dir=self.lineEditDarkDir.text()
             prefix=self.lineEditDarkPrefix.text()
             prefix=dir+prefix
             suffix=self.lineEditDataSuff.text()
             nstart=int(self.lineEditDarkStart.text())
             nend=int(self.lineEditDarkEnd.text())
             files=[]
             for i in range(nstart,nend):
                dark_file=file_name(prefix,suffix,i)
                files.append(dark_file)
             if os.path.exists(dir) is False:
                print "dark directory doesn't exist, please check it!!!!"
             elif os.path.exists(files[0]) is False:
                print "dark prefix or numbers wrong, please check it!!!!"
             else:
                detector=str(self.comboBox_detector.currentText()).lower()
                flatfield_file=str(self.comboBox_flatfield.currentText())
                if flatfield_file== 'other':
                   flatfield_file=self.lineEdit_other.text()
                while os.path.exists(files[-1]) is False:
                   print 'waiting for dark ', files[-1]
                dark=sum_data(files,detector,flatfield_file)
                dark_file=self.lineEdit_dark.text()
                print dark_file
                saveedf(dark_file,dark)
                if self.checkBox_zoom.isChecked():
                   self.matplotlibWidget1.update_figure(1,dark,dark_file,logscale='nolog',Zoom='fixed')
                else:
                   self.matplotlibWidget1.update_figure(1,dark,dark_file,logscale='nolog')
                print '...done'
                 

    def dostatic_quick(self):
             print 'calculating quick static...'
             self.dostatic('quick')
        

    def dostatic_all(self):
             print 'calculating accurate static...'
             self.dostatic('all')
        

    def dostatic(self,mode):
     self.makeinput()
     inputfile=self.lineEdit_input.text()
     if mode=='quick':
        data=do_average(inputfile,nstart='first',nend='nstart+20')
     if mode=='all':
        data=do_average(inputfile,nstart='first',nend='last')
     data_file=self.lineEdit12.text()+self.lineEdit13.text()+'rawstatic.edf'
     saveedf(data_file,data)
     if self.checkBox_darks.isChecked():
        dark_file=self.lineEdit_dark.text()
        if os.path.exists(dark_file) is False:
          self.dodarks()
        dark=loadedf(dark_file)
     else:
        dark=0*data
     data_file=self.lineEdit_data.text()
     info=get_input(inputfile)
     detector=info['detector']
     if detector!= 'medipix':
        data-=dark
     data[data<=0]=0
     saveedf(data_file,data)
     if self.checkBox_zoom.isChecked():
        self.matplotlibWidget1.update_figure(1,(data+1),data_file,Zoom='fixed')
     else:
        self.matplotlibWidget1.update_figure(1,(data+1),data_file)
     print '...done'

    def plot_dark(self):
          self.makeinput()
          dark_file=self.lineEdit_dark.text()
          if os.path.exists(dark_file) is False:
            self.dodarks()
          dark=loadedf(dark_file)
          if self.checkBox_zoom.isChecked():
             self.matplotlibWidget1.update_figure(1,dark,dark_file,logscale='nolog',Zoom='fixed')
          else:
             self.matplotlibWidget1.update_figure(1,dark,dark_file,logscale='nolog')
        

    def correlator(self):
        self.makeinput()
        self.loadinput(0)
        inputfile=self.lineEdit_input.text()
        staticfile=self.lineEdit_data.text()
        maskfile=self.lineEdit_mask.text()
        darkfile=self.lineEdit_dark.text()
        qmaskfile=self.lineEdit_qmask.text()
        if self.checkBox_darks.isChecked():
           if os.path.exists(darkfile) is False:
              self.dodarks()
              self.dostatic_quick()
        if os.path.exists(staticfile) is False:
           self.dostatic_quick()
        static=loadedf(staticfile)
        if os.path.exists(maskfile) is False:
           print 'making mask'
           self.automask() #the user_mask is directly called in automask as there is no mask file yet
        mask=loadedf(maskfile)
        if shape(mask)!=shape(static):
           print 'mask and static data have different size.... please make a mask!'
           self.user_mask()
        if os.path.exists(qmaskfile) is False:
           print 'making q mask'
           self.Qs()
        qmask=loadedf(qmaskfile)
        nq=int(self.lineEdit_nq.text())
        if int(qmask.max()/2)!= nq:
           print 'updating qmask...'
           self.Qs()
           print '...done'
        if shape(qmask)!=shape(static):
           print 'q mask and static data have different size.... calculating q mask!'
           self.Qs()
        if self.checkBox_plot.isChecked():
           arg=inputfile,darkfile,maskfile
        else:
           arg=inputfile,darkfile,maskfile,'no'
        self.Iq()
        if self.checkBox_multiproc.isChecked():
           from correlator_online_new_mp import correlator_online_mp
           tmain=threading.Thread(target=correlator_online_mp,args=(arg))
        else:
           from correlator_online_new import correlator_online
           tmain=threading.Thread(target=correlator_online,args=(arg))
        tmain.start()
        

    def stop_correlator(self):
          print 'ciao'
          print 'this is temporaly not working on windows. kill the process by hand'
#          os.spawnlp(os.P_WAIT, 'stop')   #make as comment on 03/05/2013, find a solution for that in windows.

        
        

    def change_labelsbeam(self):
           self.textLabel19.setText('X reflected beam:')
           self.textLabel20.setText('Y reflected beam:')
           self.textLabel22.setEnabled(1)
           self.lineEdit20.setEnabled(1)
        

    def change_labelsbeamback(self):
           self.textLabel19.setText('X direct beam:')
           self.textLabel20.setText('Y direct beam:')
        

    def plot_raw(self):
          self.makeinput()
          raw_file=self.lineEdit12.text()+self.lineEdit13.text()+'rawstatic.edf'
          if os.path.exists(raw_file) is False:
             self.dostatic_quick()
          data=loadedf(raw_file)
          if self.checkBox_zoom.isChecked():
             self.matplotlibWidget1.update_figure(1,data+1,raw_file,Zoom='fixed')
          else:
             self.matplotlibWidget1.update_figure(1,data+1,raw_file)
        

    def plot_cf(self):
          filename=self.lineEdit_cf.text()
          if os.path.isfile(filename):
            f=open(filename,'r')
            title= f.readline()
            qlist=title.split(': ')[-1]
            qs=qlist.split(' ')
            f.close()
            hold=False
            nq=self.lineEdit_plotq.text()
            if str(nq).lower()=='all':
               firstq=int(1)
               lastq=len(qs)+1
            elif str(nq).find(':')!=-1:
               limits=nq.split(':')
               firstq=int(limits[0])
               lastq=int(limits[1])+1
            else:
               firstq=int(nq)
               lastq=int(nq)+1
            if self.checkBox_hold.isChecked():
               hold=True
            cfdata=loadtxt(str(filename))
            markers=self.matplotlibWidget_cf.update_plot(cfdata,hold,firstq,lastq,qs,filename,"G(t)") 
          else:
            print "file ",filename," does not exist!"
        
        

    def del_cf(self):
          file=self.lineEdit_cf.text()
          nq=self.lineEdit_plotq.text()
          if str(nq).lower()=='all':
              self.matplotlibWidget_cf.cla() 
          else:
            if str(nq).find(':')!=-1:
              limits=nq.split(':')
              firstq=int(limits[0])
              lastq=int(limits[1])+1
            else:
              firstq=int(nq)
              lastq=int(nq)+1
            del_data=loadtxt(str(file))
            self.matplotlibWidget_cf.remove_plot(del_data[:,firstq:lastq])
        

    def plot_TRcf(self):
          self.update_text()
          file=self.lineEdit_TRcf.text()
          if os.path.exists(file) is False:
             print 'file ', file, "doesn't exist"
          else:
            zmin=self.lineEdit_zmin.text()
            zmax=self.lineEdit_zmax.text()
            data=ytrc.read(file)
            datadim=shape(data)[0]#sqrt(size(data))
            while datadim>4000:
               newdim=int(datadim/2)
               data=ytrc.rebin(data,(newdim,newdim))
               datadim=shape(data)[0]#sqrt(size(data))
            if zmin!='auto':
               zmin=float(zmin)
            else:
               self.lineEdit_zmin.setText(str(0))
            if zmax!='auto':
               zmax=float(zmax)
            else:
               self.lineEdit_zmax.setText(str(mean(diag(data,k=5))-1))
            self.matplotlibWidget_TRC.update_figure(1,data,file,zmax=zmax,zmin=zmin)
        

    def calc_TRCF(self):
          print "this doesnot work"
          #self.update_text()
          #outfile=self.lineEdit_TRcf.text().ascii()
          #nq=int(lineEdit_plotq_TRcf.text().ascii())
          #thread.start_new_thread(TRCF(nq,outfile))
        

    def Qs(self):
           self.makeinput()
           input_file=self.lineEdit_input.text()
           input_info=get_input(input_file)
           qtot=qpattern(input_info)           
           geometry=input_info['geometry']
           if geometry == 'gisaxs':
              qtot=qtot[1]
           firstq=float(input_info['first q'])
           deltaq=float(input_info['delta q'])
           stepq=float(input_info['step q'])
           nq=int(input_info['number of q'])
           lastq=firstq+nq*(stepq+deltaq)
           qvalues=arange(firstq,lastq,stepq+deltaq)
           if len(qvalues)>nq:
             qvalues.resize((nq,))
           qaxis_list=[]
           I=[]
           static_file=self.lineEdit_data.text()
           if os.path.exists(static_file) is False:
              self.dostatic_quick()
           static_data=loadedf(static_file)
           mask_file=self.lineEdit_mask.text()
           if os.path.exists(mask_file) is False:
              self.user_mask()
           if EdfFile.EdfFile(mask_file).GetNumImages()!=2:
              print "doing automask"
              self.automask()
           totmask=loadedf(mask_file,0)+loadedf(mask_file,1)
           fileq=self.lineEdit_qmask.text()
           qvalue=firstq
           firsttime=0
           qsave=0*static_data
           n=0
           for el,q in enumerate(qvalues):
              ind=where((qtot>=q)&(qtot<=q+deltaq)&(totmask==0))
              npixel=len(ind[0])
              #This is to reject q-rings that have no pixels (e.g. behind the beamstop or outside the ccd range, it permits to put in the input firstq=0 and an arbitrary high number of qs)
              if npixel!=0:
                 n+=2
                 if firsttime==0:
                    firstq=q
                    self.lineEdit_firstq.setText(str(firstq))
                 qsave[ind]=n
                 firsttime=1
                 qval=q+deltaq/2
                 qaxis_list.append(qval)
                 I.append(p.average(static_data[ind]))
           saveedf(fileq,qsave)
           outfile=self.lineEdit12.text()+'/'+self.lineEdit13.text()+'1Dstatic.dat'
           f=open(outfile,'w')
           f.write('#q (1/Ang) I(q) (a.u.) \n')
           qaxis=array(qaxis_list)
           I_q=array(I)
           tosave=transpose(array([qaxis,I_q]))
           savetxt(f,tosave)
           f.close()
           nq=len(qaxis_list)
           self.lineEdit_nq.setText(str(nq))
           qsave[qsave==0]=1
           qsave[qsave>=2]=0
           if self.checkBox_zoom.isChecked():
              self.matplotlibWidget1.update_figure(0,static_data+1,fileq,qsave+totmask,Zoom='fixed')
           else:
              self.matplotlibWidget1.update_figure(0,static_data+1,fileq,qsave+totmask)
           self.makeinput()
        

    def plotQmask(self): 
           static_file=self.lineEdit_data.text()
           if os.path.exists(static_file) is False:
              self.dostatic_quick()
           static_data=loadedf(static_file)
           mask_file=self.lineEdit_mask.text()
           if os.path.exists(mask_file) is False:
              self.user_mask()
           if EdfFile.EdfFile(mask_file).GetNumImages()!=2:
              self.automask()
           totmask=loadedf(mask_file,0)+loadedf(mask_file,1)
           fileq=self.lineEdit_qmask.text()
           if os.path.exists(fileq) is False:
              self.Qs()
           q=loadedf(fileq)
           q[q==0]=1
           q[q>=2]=0
           if self.checkBox_zoom.isChecked():
              self.matplotlibWidget1.update_figure(0,static_data+1,fileq,q+totmask,Zoom='fixed')
           else:
              self.matplotlibWidget1.update_figure(0,static_data+1,fileq,q+totmask,)
        

    def Iq(self):
           self.makeinput()
           input_file=self.lineEdit_input.text()
           input_info=get_input(input_file)
           qtot=qpattern(input_info)
           geometry=input_info['geometry']
           if geometry == 'gisaxs':
              qtot=qtot[1]
           wavelength=float(self.lineEdit_lambda.text())
           distance=float(self.lineEdit_dsd.text())
           detector=str(self.comboBox_detector.currentText()).lower()
           if detector == 'princeton' or detector == 'andor 22.5micron':
              pix_size=0.0225      
           if detector == 'medipix':
              pix_size=0.055      
           if detector == 'andor 13micron' or detector == 'andor':
              pix_size=0.013      
           deltaq=4*pi/wavelength*sin(arctan(2*pix_size/distance)/2)
           static_file=self.lineEdit_data.text()
           if os.path.exists(static_file) is False:
              self.dostatic_quick()
           static_data=loadedf(static_file)
           mask_file=self.lineEdit_mask.text()
           if os.path.exists(mask_file) is False:
              self.user_mask()
           if EdfFile.EdfFile(mask_file).GetNumImages()!=2:
              self.automask()
           totmask=loadedf(mask_file,0)+loadedf(mask_file,1)
           q=qtot[totmask==0]
           indq=argsort(q)
           q=q[indq]
           qr=arange(min(q),max(q)+deltaq,deltaq)
           m=static_data[totmask==0]
           m=m[indq]
           lqv=len(qr)
           ini=0
           hh,bins=histogram(q,lqv)
           radi=zeros((len(bins)-1,2))
           radi[:,0]=bins[:-1]+deltaq/2
           for i in xrange(lqv):
              radi[i,1]=mean(m[ini:ini+hh[i]])
              ini=ini+hh[i]
           outfile=str(self.lineEdit12.text())+'/'+str(self.lineEdit13.text())+'1Dstatic_fine.dat'
           f=open(outfile,'w')
           f.write('#q (1/Ang) I(q) (a.u.) \n')      
           savetxt(f,radi)
           f.close()  
           outfile=str(self.lineEdit12.text())+'/'+str(self.lineEdit13.text())+'1Dstatic.dat'
           if os.path.isfile(outfile): 
             iq_data=loadtxt(outfile)  
             radi=transpose(radi)
             self.matplotlibWidget1.update_plotlog(iq_data[:,0],iq_data[:,1],radi[0],radi[1])
           else:
             print "Make Qs first!"

    def automask(self):
         filename=self.lineEdit_input.text()
         self.makeinput()
         input_info=get_input(filename)
         tolerance=float(input_info['tolerance'])
         print 'tolearance = ', tolerance
         datafile=self.lineEdit_data.text()
         if os.path.exists(datafile) is False:
            self.dostatic_quick()
         data=loadedf(datafile)
         if tolerance>=0:
           detector=self.comboBox_detector.currentText()
           treshold_mask=auto_mask(input_info,dark_file=self.lineEdit_dark.text())
         else:
             print 'using only user mask'
             treshold_mask=zeros(shape(data),dtype=int)
         mask_file=self.lineEdit_mask.text()
         print mask_file
         if os.path.exists(mask_file):
           usermask=loadedf(mask_file,0)
           saveedf(mask_file,usermask,0)
           saveedf(mask_file,treshold_mask,1)
         else: 
           print 'make user mask'
           usermask=0*treshold_mask
           saveedf(mask_file,usermask,0)
           saveedf(mask_file,treshold_mask,1)
           self.user_mask()

        

    def clear_cf(self):
          self.matplotlibWidget_cf.cla()
        

    def chi4(self):
          print "this does not work!" 
          #self.update_text()
          #inputfile=self.lineEdit_input.text().ascii()
          #q_chi4=int(self.q_lineEdit_chi4.text().ascii())
          #print '...calculating chi4'
          #mask_file=self.lineEdit_mask.text().ascii()
          #dark_file=self.lineEdit_dark.text().ascii()
          #arg=q_chi4,inputfile,dark_file,mask_file
          #tchi4=threading.Thread(target=chi4,args=(arg))
          #tchi4.start()
        # # tchi4.join()
          #print 'plotting'
        # # chi4(q_chi4,fileinput=inputfile,mask_file=mask_file,dark_file=dark_file)
          #self.plot_chi4()
        

    def plot_chi4(self):
          self.update_text()
          chi4_file=self.lineEdit_chi4_file.text()
          if os.path.isfile(chi4_file):
            f=open(chi4_file,'r')
            line=f.readline()
            qs=[line.split(":")[1]]*2
            chi4_data=loadtxt(str(chi4_file))
            hold=False 
            if self.checkBox_hold_chi4.isChecked():
              hold=True
            self.matplotlibWidget_chi4.update_plot(chi4_data,hold,1,2,qs,chi4_file,"Chi_4") 
          else:
            print 'chi4 file ', chi4_file, "doesn't exist"


    def fit(self):
          tmain=threading.Thread(target=os.spawnlp,args=(os.P_WAIT,'PYFIT'))
          tmain.start()
        
        #  os.spawnlp(os.P_WAIT, 'multifit_gui')
        

    def activate_flatfield(self):
           detector=str(self.comboBox_detector.currentText()).lower()
           if detector!='medipix':	   
              self.checkBox_flatfield.setEnabled(0)
              self.comboBox_flatfield.setEnabled(0)
           else:
              self.checkBox_flatfield.setEnabled(1)
              self.checkBox_flatfield.setChecked(1)
              self.comboBox_flatfield.setEnabled(1)
              #self.comboBox_flatfield.setCurrentItem(0)
              self.comboBox_flatfield.setCurrentIndex(0)
        

    def Loadflatfield(self):
#           PathLineEdit = "./"
           #flatfield_file = QtGui.QFileDialog.getOpenFileName()
           flatfield_file = QtGui.QFileDialog.getOpenFileName(Form1,"Open Flat Field File","./","*.edf")
           self.lineEdit_other.setText(flatfield_file)
        
        
        

    def activateLoad(self):
           flatfield_file=str(self.comboBox_flatfield.currentText()).lower()
           if flatfield_file=='other':
              self.Loadflatfield()
              self.lineEdit_other.setEnabled(1)
           else:
              self.lineEdit_other.clear()
              self.lineEdit_other.setEnabled(0)
        

    def LoadDataDir(self):
#           PathLineEdit = self.lineEditDataDir.text()
           dir = QtGui.QFileDialog.getExistingDirectory()
           if dir:
              self.lineEditDataDir.setText(dir)
        

    def LoadDarkDir(self):
#           PathLineEdit = self.lineEditDataDir.text()
           dir = QtGui.QFileDialog.getExistingDirectory()
           if dir:
              self.lineEditDarkDir.setText(dir)
        

    def LoadOutDir(self):
#           PathLineEdit = "./"
           dir = QtGui.QFileDialog.getExistingDirectory()
           if dir:
              self.lineEdit12.setText(dir)
        

    def LoadMaskFile(self):
#           PathLineEdit = self.lineEdit_mask.text()
           filename = QtGui.QFileDialog.getOpenFileName()
           if filename:
              self.lineEdit_mask.setText(filename)
        

    def LoadDarkFile(self):
#           PathLineEdit = self.lineEdit_dark.text()
           filename = QtGui.QFileDialog.getOpenFileName()
           if filename:
              self.lineEdit_dark.setText(filename)
        

    def SetNormalizeList(self):
           self.comboBox_normalize.clear()
           #self.comboBox_normalize.setItemText(0, _translate("Form1", "None", None))
           #self.comboBox_normalize.setItemText(1, _translate("Form1", "Average in CCD", None))
           self.comboBox_normalize.insertItem(0,self.__tr("None"))
           self.comboBox_normalize.insertItem(1,self.__tr("Average in CCD"))
           detector=str(self.comboBox_detector.currentText()).lower()
           if detector!='medipix':
              #self.comboBox_normalize.setItemText(1, _translate("Form1", "Monitor", None))
              self.comboBox_normalize.insertItem(0,self.__tr("Monitor"))
        
        

    def __tr(self,s,c = None):
        return QtGui.qApp.translate("Form1",s,c)
    
################################################################################






from mplwidget import MplWidget

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    Form1 = QtGui.QDialog()
    ui = Ui_Form1()
    ui.setupUi(Form1)
    Form1.show()
    sys.exit(app.exec_())

